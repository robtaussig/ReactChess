{"version":3,"sources":["webpack:///webpack/bootstrap b02403cb2dfa15a82858","webpack:///./logic/move_worker.js","webpack:///./logic/logic_bridge.js","webpack:///./logic/ai.js","webpack:///./logic/board_node.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","BoardNode","module","exports","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","color","returnPieces","row","i","square","j","testSquare","parseSquare","push","allSquares","allMoves","type","filter","rookMoves","pos","canMove","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","defended","toX","toY","from","notInCheck","checkMove","selected","dx","dy","Math","abs","checkPawnCaptures","pawn","oppColor","dX","dY","status","afterMove","testMove","king","findKing","findAttackers","colorToCheck","sameSide","yDir","left","right","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant","PIECE_VALUES","evaluateMove","newBoard","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","sorted","sort","a","b","secondBestAttack","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","posX","posY","rook","knight","bishop","queen","xCoord"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAMA,cAAc,mBAAAC,CAAQ,CAAR,CAApB;AACA,KAAMC,KAAK,mBAAAD,CAAQ,CAAR,CAAX;;AAEAE,MAAKC,SAAL,GAAiB,UAAUC,CAAV,EAAa;AAC5B,OAAIC,YAAYD,EAAEE,IAAF,CAAOA,IAAP,CAAYC,YAA5B;AACA,OAAIC,YAAYP,GAAGQ,IAAH,CAAQL,EAAEE,IAAF,CAAOA,IAAP,CAAYI,KAAZ,CAAkBC,MAA1B,CAAhB;AACA,OAAIC,QAAQR,EAAEE,IAAF,CAAOA,IAAP,CAAYM,KAAxB;AACA,OAAIC,WAAWd,YAAYe,YAAZ,CAAyBN,SAAzB,EAAmCH,SAAnC,EAA6CO,KAA7C,CAAf;AACA,OAAIG,eAAe,mBAAnB;AACA,OAAIC,WAAWC,OAAOC,MAAP,CAAc,EAACC,MAAM,EAAP,EAAWC,WAAW,KAAtB,EAA6BC,WAAW,KAAxC,EAA+CC,QAAQ,KAAvD,EAAd,EAA4ET,QAA5E,CAAf;AACAU,eAAYP,QAAZ;AACD,EARD,C;;;;;;;;ACHA,KAAMf,KAAK,mBAAAD,CAAQ,CAAR,CAAX;AACA,KAAMwB,YAAY,mBAAAxB,CAAQ,CAAR,CAAlB;;AAEAyB,QAAOC,OAAP,GAAiB;AACfZ,eADe,wBACDJ,KADC,EACKL,SADL,EACeO,KADf,EACsB;AAAA;;AACnC,SAAIe,QAAQ1B,GAAG2B,iBAAH,CACE3B,GAAG4B,aAAH,CAAiBnB,KAAjB,EAAuBL,UAAUyB,WAAjC,EACCC,GADD,CACK;AAAA,cAAQ,MAAKC,wBAAL,CAA8BC,KAA9B,EAAoCvB,KAApC,EAA0CL,SAA1C,CAAR;AAAA,MADL,CADF,CAAZ;AAIA,SAAIsB,MAAMO,MAAN,KAAiB,CAArB,EAAwB,OAAO,EAACd,WAAW,IAAZ,EAAkBe,MAAM9B,UAAUyB,WAAlC,EAAP;;AAExB,SAAIjB,WAAW,IAAf;AACAc,WAAMS,OAAN,CAAc,gBAAQ;AACpB,WAAIC,cAAc,IAAIb,SAAJ,CAAcL,IAAd,EAAmBT,KAAnB,EAAyBL,SAAzB,EAAmCO,KAAnC,CAAlB;AACA,WAAIyB,YAAYjB,SAAhB,EAA2B;AACzB,gBAAO,EAACD,MAAMkB,YAAYlB,IAAnB,EAAyBC,WAAW,IAApC,EAAP;AACD;AACDP,kBAAWA,WACRwB,YAAYC,KAAZ,GAAoBzB,SAASyB,KAA7B,GACCD,WADD,GACexB,QAFP,GAEmBwB,WAF9B;AAGD,MARD;AASA,YAAO,EAAClB,MAAMN,SAASM,IAAhB,EAAP;AACD;AAnBc,EAAjB,C;;;;;;;;;;ACHAM,QAAOC,OAAP,GAAiB;AACfnB,iBAAc,EADC;;AAGfsB,gBAHe,yBAGAnB,KAHA,EAGM6B,KAHN,EAGa;AAAA;;AAC1B,SAAIC,eAAe,EAAnB;AACA9B,WAAM0B,OAAN,CAAc,UAACK,GAAD,EAAKC,CAAL,EAAS;AACrBD,WAAIL,OAAJ,CAAY,UAACO,MAAD,EAAQC,CAAR,EAAY;AACtB,aAAIC,aAAa,MAAKC,WAAL,CAAiBpC,KAAjB,EAAuBgC,CAAvB,EAAyBE,CAAzB,CAAjB;AACA,aAAIC,WAAWV,IAAX,KAAoBI,KAAxB,EAA+B;AAC7BC,wBAAaO,IAAb,CAAkBF,UAAlB;AACD;AACF,QALD;AAMD,MAPD;AAQA,YAAOL,YAAP;AACD,IAdc;AAgBfR,2BAhBe,oCAgBWC,KAhBX,EAgBkBvB,KAhBlB,EAgByBL,SAhBzB,EAgBoC;AACjD,SAAI2C,aAAa,EAAjB;AACA,SAAIC,iBAAJ;AACA,UAAK,IAAIP,IAAE,CAAX,EAAaA,IAAE,CAAf,EAAiBA,GAAjB,EAAsB;AACpB,YAAK,IAAIE,IAAE,CAAX,EAAaA,IAAE,CAAf,EAAiBA,GAAjB,EAAsB;AACpBI,oBAAWD,IAAX,CAAgB,CAACH,CAAD,EAAGF,CAAH,CAAhB;AACD;AACF;AACD,SAAIT,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAGmD,SAAH,CAAanB,MAAMoB,GAAnB,EAAwBV,OAAO,CAAP,CAAxB,EAAmCA,OAAO,CAAP,CAAnC,CAAP;AACD,QAFU,EAERQ,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;;AAED,SAAIc,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAGsD,WAAH,CAAetB,MAAMoB,GAArB,EAA0BV,OAAO,CAAP,CAA1B,EAAqCA,OAAO,CAAP,CAArC,CAAP;AACD,QAFU,EAERQ,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;;AAED,SAAIc,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAGuD,WAAH,CAAevB,MAAMoB,GAArB,EAA0BV,OAAO,CAAP,CAA1B,EAAqCA,OAAO,CAAP,CAArC,CAAP;AACD,QAFU,EAERQ,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;;AAED,SAAIc,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAGwD,UAAH,CAAcxB,MAAMoB,GAApB,EAAyBV,OAAO,CAAP,CAAzB,EAAoCA,OAAO,CAAP,CAApC,CAAP;AACD,QAFU,EAERQ,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;;AAED,SAAIc,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAGyD,SAAH,CAAaf,OAAO,CAAP,CAAb,EAAwBA,OAAO,CAAP,CAAxB,EAAmCV,MAAMoB,GAAzC,EAA8C3C,KAA9C,CAAP;AACD,QAFU,EAERyC,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;;AAED,SAAIc,MAAMiB,IAAN,KAAe,GAAnB,EAAwB;AACtBD,kBAAWD,WAAWG,MAAX,CAAkB,kBAAS;AACpC,gBAAOlD,GAAG0D,SAAH,CAAa1B,MAAMoB,GAAnB,EAAwBV,OAAO,CAAP,CAAxB,EAAmCA,OAAO,CAAP,CAAnC,CAAP;AACD,QAFU,EAERQ,MAFQ,CAED,kBAAS;AACjB,gBAAOlD,GAAGqD,OAAH,CAAWX,OAAO,CAAP,CAAX,EAAsBA,OAAO,CAAP,CAAtB,EAAiCjC,KAAjC,EAAwCuB,MAAMoB,GAA9C,EAAkDhD,SAAlD,CAAP;AACD,QAJU,EAIR0B,GAJQ,CAIJ;AAAA,gBAAQ,CAACE,MAAMoB,GAAP,EAAWlC,IAAX,CAAR;AAAA,QAJI,CAAX;AAKD;AACD,YAAO8B,QAAP;AACD,IAxEc;AA0EfrB,oBA1Ee,6BA0EIgC,KA1EJ,EA0EW;AACxB,SAAIC,SAAS,EAAb;AACAD,WAAMxB,OAAN,CAAc,oBAAY;AACxB0B,gBAAS1B,OAAT,CAAiB,gBAAQ;AACvByB,gBAAOd,IAAP,CAAY5B,IAAZ;AACD,QAFD;AAGD,MAJD;AAKA,YAAO0C,MAAP;AACD,IAlFc;AAoFff,cApFe,uBAoFFnC,MApFE,EAoFMoD,CApFN,EAoFSC,CApFT,EAoFY;AACzB,SAAIC,YAAY;AACd9B,aAAMxB,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CADQ;AAEdd,aAAMvC,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAFQ;AAGdX,YAAK,CAACW,CAAD,EAAGD,CAAH,CAHS;AAIdG,iBAAU;AAJI,MAAhB;AAMA,YAAOD,SAAP;AACD,IA5Fc;AA8FfX,UA9Fe,mBA8FPa,GA9FO,EA8FFC,GA9FE,EA8FGzD,MA9FH,EA8FW0D,IA9FX,EA8FgBhE,SA9FhB,EA8F2B;AACxCE,oBAAeF,SAAf;AACA;AACA,SAAIiE,WAAWH,GAAX,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2B1D,MAA3B,CAAJ,EAAwC;AACtC,WAAI4D,UAAUJ,GAAV,EAAeC,GAAf,EAAoBzD,MAApB,EAA4B0D,IAA5B,CAAJ,EAAuC,OAAO,IAAP;AACxC;AACD,YAAO,KAAP;AACD,IArGc;AAuGfb,cAvGe,uBAuGFgB,QAvGE,EAuGQL,GAvGR,EAuGaC,GAvGb,EAuGkB;AAAA,oCAClBI,QADkB;;AAAA,SAC1BR,CAD0B;AAAA,SACvBD,CADuB;;AAE/B,SAAIU,KAAKN,MAAMH,CAAf;AACA,SAAIU,KAAKN,MAAML,CAAf;AACA,YAAQY,KAAKC,GAAL,CAASH,EAAT,IAAeE,KAAKC,GAAL,CAASF,EAAT,CAAf,KAAgC,CAAxC;AACD,IA5Gc;AA8GftB,YA9Ge,qBA8GJoB,QA9GI,EA8GML,GA9GN,EA8GWC,GA9GX,EA8GgB;AAAA,qCAChBI,QADgB;;AAAA,SACxBR,CADwB;AAAA,SACrBD,CADqB;;AAE7B,SAAIU,KAAKN,MAAMH,CAAf;AACA,SAAIU,KAAKN,MAAML,CAAf;AACA,YAAQU,OAAO,CAAP,IAAYC,OAAO,CAAnB,IAAuBA,OAAO,CAAP,IAAYD,OAAO,CAAlD;AACD,IAnHc;AAqHfhB,aArHe,sBAqHHe,QArHG,EAqHOL,GArHP,EAqHYC,GArHZ,EAqHiB;AAAA,qCACjBI,QADiB;;AAAA,SACzBR,CADyB;AAAA,SACtBD,CADsB;;AAE9B,SAAIU,KAAKN,MAAMH,CAAf;AACA,SAAIU,KAAKN,MAAML,CAAf;AACA,YAAQY,KAAKC,GAAL,CAASH,EAAT,IAAeE,KAAKC,GAAL,CAASF,EAAT,CAAf,KAAgC,CAAjC,IACND,OAAO,CAAP,IAAYC,OAAO,CAAnB,IAAuBA,OAAO,CAAP,IAAYD,OAAO,CAD3C;AAED,IA3Hc;AA6HflB,cA7He,uBA6HFiB,QA7HE,EA6HOL,GA7HP,EA6HYC,GA7HZ,EA6HiB;AAAA,qCACfI,QADe;;AAAA,SACvBR,CADuB;AAAA,SACpBD,CADoB;;AAE9B,SAAMU,KAAKN,MAAMH,CAAjB;AACA,SAAMU,KAAKN,MAAML,CAAjB;AACA,YAAQY,KAAKC,GAAL,CAASH,EAAT,MAAiB,CAAjB,IAAsBE,KAAKC,GAAL,CAASF,EAAT,MAAiB,CAAxC,IACCC,KAAKC,GAAL,CAASH,EAAT,MAAiB,CAAjB,IAAsBE,KAAKC,GAAL,CAASF,EAAT,MAAiB,CAD/C;AAED,IAnIc;AAqIff,YArIe,qBAqIJa,QArII,EAqIML,GArIN,EAqIWC,GArIX,EAqIgB;AAAA,qCACdI,QADc;;AAAA,SACtBR,CADsB;AAAA,SACnBD,CADmB;;AAE7B,SAAMU,KAAKN,MAAMH,CAAjB;AACA,SAAMU,KAAKN,MAAML,CAAjB;AACA,YAAQY,KAAKC,GAAL,CAASH,EAAT,KAAgB,CAAhB,IAAqBE,KAAKC,GAAL,CAASF,EAAT,KAAgB,CAAtC,IACCC,KAAKC,GAAL,CAASH,EAAT,IAAeE,KAAKC,GAAL,CAASF,EAAT,CAAf,GAA8B,CADtC;AAED,IA3Ic;AA6IfG,oBA7Ie,6BA6IIV,GA7IJ,EA6ISC,GA7IT,EA6IcU,IA7Id,EA6IoBnE,MA7IpB,EA6I4B;AAAA,gCAC1BmE,IAD0B;;AAAA,SAClCd,CADkC;AAAA,SAC/BD,CAD+B;;AAEzC,SAAMxB,QAAQ5B,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,SAAMe,WAAWxC,UAAU,GAAV,GAAgB,GAAhB,GAAsB,GAAvC;AACA,SAAMyC,KAAKb,MAAMH,CAAjB;AACA,SAAMiB,KAAKb,MAAML,CAAjB;AACA,SAAM1C,YAAYd,aAAagC,KAAb,EAAoBlB,SAAtC;AACA,SAAIkB,UAAU,GAAV,IAAiB0C,KAAK,CAAtB,IAA2B1C,UAAU,GAAV,IAAiB0C,KAAI,CAApD,EAAuD;AACrD,cAAO,KAAP;AACD,MAFD,MAEO,IAAIN,KAAKC,GAAL,CAASI,EAAT,MAAiB,CAAjB,IAAsBL,KAAKC,GAAL,CAASK,EAAT,MAAiB,CAAvC,IACTtE,OAAOyD,GAAP,EAAYD,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,MAA2B5B,KADlB,IAET5B,OAAOyD,GAAP,EAAYD,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,MAA2B,GAFtB,EAE2B;AAC9B,cAAO,IAAP;AACD,MAJI,MAIE,IAAI9C,UAAU6D,MAAd,EAAsB;AAC3B,WAAIJ,KAAK,CAAL,MAAYzD,UAAUgC,GAAV,CAAc,CAAd,CAAZ,IAAgCyB,KAAK,CAAL,MAAYzD,UAAUgC,GAAV,CAAc,CAAd,CAA5C,IACFc,QAAQH,IAAI3C,UAAUgC,GAAV,CAAc,CAAd,CADV,IAC8BsB,KAAKC,GAAL,CAASK,EAAT,MAAiB,CADnD,EACsD;AAClD,gBAAO,IAAP;AACH;AACF;AACH,YAAO,KAAP;AACD,IAjKc;AAmKfX,aAnKe,sBAmKHH,GAnKG,EAmKEC,GAnKF,EAmKOC,IAnKP,EAmKa1D,MAnKb,EAmKqB;AAClC,SAAI4B,QAAQ5B,OAAO0D,KAAK,CAAL,CAAP,EAAgBA,KAAK,CAAL,CAAhB,EAAyB,CAAzB,EAA4B,CAA5B,CAAZ;AACA,SAAI7D,YAAYC,KAAKE,MAAL,CAAhB;AACA,SAAIwE,YAAYC,SAAS5E,SAAT,EAAoB6D,IAApB,EAA0B,CAACF,GAAD,EAAMC,GAAN,CAA1B,CAAhB;AACA,SAAIiB,OAAOC,SAASH,SAAT,EAAmB5C,KAAnB,CAAX,CAJkC,CAII;AACtC,SAAIgD,cAAcF,IAAd,EAAmBF,SAAnB,EAA6B5C,UAAQ,GAAR,GAAY,GAAZ,GAAgB,GAA7C,EAAiD,KAAjD,EAAwDL,MAAxD,GAAiE,CAArE,EAAwE;AACtE,cAAO,KAAP;AACD,MAFD,MAEO;AACL,cAAO,IAAP;AACD;AACF,IA7Kc;AA+KfqD,gBA/Ke,yBA+KAtD,KA/KA,EA+KOvB,KA/KP,EA+Kc8E,YA/Kd,EA+K4BC,QA/K5B,EA+KsC;AACnD,SAAI,CAACxD,KAAL,EAAY,OAAO,KAAP;AACZ,SAAIyD,OAAOF,iBAAiB,GAAjB,GAAuBvD,MAAM,CAAN,IAAW,CAAlC,GAAsCA,MAAM,CAAN,IAAW,CAA5D;AACA,SAAI0D,OAAO1D,MAAM,CAAN,IAAW,CAAtB;AACA,SAAI2D,QAAQ3D,MAAM,CAAN,IAAW,CAAvB;AACA,SAAI4D,eAAe,EAAnB;AACA;AACA,SAAIF,QAAQ,CAAR,IAAaA,QAAQ,CAArB,IAA0BD,QAAQ,CAAlC,IAAuCA,QAAQ,CAA/C,IACFhF,MAAMgF,IAAN,EAAYC,IAAZ,EAAkB,CAAlB,MAA4BH,YAA5B,OADF,EACgD;AAC9CK,oBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAM,GAAN,CAAlB;AACD,MAHD,MAGO,IAAI6C,SAAS,CAAT,IAAcA,SAAS,CAAvB,IAA4BF,QAAQ,CAApC,IAAyCA,QAAQ,CAAjD,IACThF,MAAMgF,IAAN,EAAYE,KAAZ,EAAmB,CAAnB,MAA6BJ,YAA7B,OADK,EAC0C;AAC/CK,oBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD;AACD;AACA,MAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAP,EAAc,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAd,EAAqB,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAArB,EAA6B,CAAC,CAAD,EAAG,CAAH,CAA7B,EAAmC,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAnC,EAA0C,CAAC,CAAC,CAAF,EAAI,CAAJ,CAA1C,EAAiD,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAAjD,EAA0DX,OAA1D,CAAkE,iBAAS;AACzE,WAAI4B,IAAI/B,MAAM,CAAN,IAAW6D,MAAM,CAAN,CAAnB;AACA,WAAI/B,IAAI9B,MAAM,CAAN,IAAW6D,MAAM,CAAN,CAAnB;AACA,WAAI9B,KAAK,CAAL,IAAUA,KAAI,CAAd,IAAmBD,KAAK,CAAxB,IAA6BA,KAAK,CAAtC,EAAyC;AACvC,aAAIrD,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,OAAJ,EAA4C;AAC1CK,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD;AACF;AACF,MARD;AASA;AACA,MAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAP,EAAc,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAd,EAAqB,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAArB,EAA8BX,OAA9B,CAAsC,gBAAQ;AAC5C,WAAI4B,IAAI/B,MAAM,CAAN,IAAW8D,KAAK,CAAL,CAAnB;AAAA,WACEhC,IAAI9B,MAAM,CAAN,IAAW8D,KAAK,CAAL,CADjB;AAEA,cAAO/B,KAAK,CAAL,IAAUA,KAAK,CAAf,IAAoBD,KAAK,CAAzB,IAA8BA,KAAK,CAA1C,EAA6C;AAC3C,aAAIrD,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,WACFQ,iBAAiBhC,CAAjB,EAAmBD,CAAnB,EAAqB9B,KAArB,EAA2BvB,KAA3B,EAAiC+E,QAAjC,CADF,EAC8C;AAC5CI,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD,UAHD,MAGO,IAAIrC,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,WACTQ,iBAAiBhC,CAAjB,EAAmBD,CAAnB,EAAqB9B,KAArB,EAA2BvB,KAA3B,EAAiC+E,QAAjC,CADK,EACuC;AAC5CI,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD;AACDiB,cAAK+B,KAAK,CAAL,CAAL;AACAhC,cAAKgC,KAAK,CAAL,CAAL;AACD;AACF,MAdD;AAeA;AACA,MAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAP,EAAc,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAd,EAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA4B3D,OAA5B,CAAoC,gBAAQ;AAC1C,WAAI4B,IAAI/B,MAAM,CAAN,IAAW8D,KAAK,CAAL,CAAnB;AAAA,WACEhC,IAAI9B,MAAM,CAAN,IAAW8D,KAAK,CAAL,CADjB;AAEA,cAAO/B,KAAK,CAAL,IAAUA,KAAK,CAAf,IAAoBD,KAAK,CAAzB,IAA8BA,KAAK,CAA1C,EAA6C;AAC3C,aAAIrD,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,WACFQ,iBAAiBhC,CAAjB,EAAmBD,CAAnB,EAAqB9B,KAArB,EAA2BvB,KAA3B,EAAiC+E,QAAjC,CADF,EAC8C;AAC5CI,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD,UAHD,MAGO,IAAIrC,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,WACTQ,iBAAiBhC,CAAjB,EAAmBD,CAAnB,EAAqB9B,KAArB,EAA2BvB,KAA3B,EAAiC+E,QAAjC,CADK,EACuC;AAC5CI,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAM,GAAN,CAAlB;AACD;AACDiB,cAAK+B,KAAK,CAAL,CAAL;AACAhC,cAAKgC,KAAK,CAAL,CAAL;AACD;AACF,MAdD;;AAgBA;AACA,MAAC,CAAC,CAAD,EAAG,CAAH,CAAD,EAAO,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAP,EAAc,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAd,EAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA2B,CAAC,CAAD,EAAG,CAAH,CAA3B,EAAiC,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAjC,EAAwC,CAAC,CAAC,CAAF,EAAI,CAAJ,CAAxC,EAA+C,CAAC,CAAC,CAAF,EAAI,CAAC,CAAL,CAA/C,EAAwD3D,OAAxD,CAAgE,iBAAS;AACvE,WAAI4B,IAAI/B,MAAM,CAAN,IAAW6D,MAAM,CAAN,CAAnB;AACA,WAAI/B,IAAI9B,MAAM,CAAN,IAAW6D,MAAM,CAAN,CAAnB;AACA,WAAI9B,KAAK,CAAL,IAAUA,KAAK,CAAf,IAAoBD,KAAK,CAAzB,IAA8BA,KAAK,CAAvC,EAA0C;AACxC,aAAIrD,MAAMqD,CAAN,EAASC,CAAT,EAAY,CAAZ,MAAsBwB,YAAtB,OAAJ,EAA4C;AAC1CK,wBAAa9C,IAAb,CAAkB,CAAC,IAAD,EAAO,GAAP,CAAlB;AACD;AACF;AACF,MARD;AASA,YAAO8C,YAAP;AACD,IAnPc;AAqPfT,WArPe,oBAqPL5E,SArPK,EAqPM6D,IArPN,EAqPY4B,EArPZ,EAqPgB;AAC7B,SAAIzB,WAAWH,IAAf;AACA,SAAI6B,QAAQ1F,UAAUgE,SAAS,CAAT,CAAV,EAAuBA,SAAS,CAAT,CAAvB,EAAoC,CAApC,CAAZ;AACA,SAAIjC,QAAQ2D,MAAM,CAAN,CAAZ;AACA,SAAI1F,UAAUyF,GAAG,CAAH,CAAV,EAAiBA,GAAG,CAAH,CAAjB,EAAwB,CAAxB,EAA2B,CAA3B,MAAkC1D,KAAtC,EAA6C;AAC3C/B,iBAAUyF,GAAG,CAAH,CAAV,EAAiBA,GAAG,CAAH,CAAjB,EAAwB,CAAxB,IAA6BC,KAA7B;AACA1F,iBAAUgE,SAAS,CAAT,CAAV,EAAuBA,SAAS,CAAT,CAAvB,EAAoC,CAApC,IAAyC,KAAzC;AACD;AACD,YAAOhE,SAAP;AACD,IA9Pc;AAgQfC,OAhQe,gBAgQTmD,KAhQS,EAgQF;AACX,SAAMuC,QAAQ,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,CAAd;AACA,UAAK,IAAIzD,IAAE,CAAX,EAAaA,IAAEkB,MAAM1B,MAArB,EAA4BQ,GAA5B,EAAiC;AAC/B,YAAK,IAAIE,IAAE,CAAX,EAAaA,IAAEgB,MAAMlB,CAAN,EAASR,MAAxB,EAA+BU,GAA/B,EAAoC;AAClC,aAAIX,QAAW2B,MAAMlB,CAAN,EAASE,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAX,SAAgCgB,MAAMlB,CAAN,EAASE,CAAT,EAAY,CAAZ,EAAe,CAAf,CAApC;AACAuD,eAAMzD,CAAN,EAASK,IAAT,CAAc,CAACd,KAAD,CAAd;AACD;AACF;AACD,YAAOkE,KAAP;AACD,IAzQc;AA2Qfb,WA3Qe,oBA2QL3E,MA3QK,EA2QE4B,KA3QF,EA2QS;AACtB,SAAM6D,SAAY7D,KAAZ,OAAN;AACA,UAAK,IAAIG,IAAE,CAAX,EAAcA,KAAG,CAAjB,EAAmBA,GAAnB,EAAwB;AACtB,YAAK,IAAIE,IAAE,CAAX,EAAcA,KAAG,CAAjB,EAAmBA,GAAnB,EAAwB;AACtB,aAAIjC,OAAO+B,CAAP,EAAUE,CAAV,EAAa,CAAb,MAAoBwD,MAAxB,EAAgC;AAC9B,kBAAO,CAACxD,CAAD,EAAIF,CAAJ,CAAP;AACD;AACF;AACF;AACF,IApRc;AAsRf6B,YAtRe,qBAsRJJ,GAtRI,EAsRCC,GAtRD,EAsRMzD,MAtRN,EAsRc0D,IAtRd,EAsRoB;AACjC,SAAIhB,MAAMgB,IAAV;AACA,SAAIpC,QAAQtB,OAAO0C,IAAI,CAAJ,CAAP,EAAeA,IAAI,CAAJ,CAAf,EAAuB,CAAvB,CAAZ;AACA,SAAId,QAAQ5B,OAAO0C,IAAI,CAAJ,CAAP,EAAeA,IAAI,CAAJ,CAAf,EAAuB,CAAvB,EAA0B,CAA1B,CAAZ;AACA,SAAIpB,MAAM,CAAN,MAAa,GAAjB,EAAsB;AACpB,WAAItB,OAAOyD,GAAP,EAAYD,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,MAA2B5B,KAA/B,EAAsC;AACpC,gBAAOgB,YAAYF,GAAZ,EAAgBc,GAAhB,EAAqBC,GAArB,CAAP;AACD;AACF,MAJD,MAIO,IAAInC,MAAM,CAAN,MAAa,GAAjB,EAAsB;AAC3B,WAAI+D,iBAAiB7B,GAAjB,EAAsBC,GAAtB,EAA2Bf,GAA3B,EAAgC1C,MAAhC,CAAJ,EAA6C;AAC3C,gBAAO6C,YAAYH,GAAZ,EAAgBc,GAAhB,EAAqBC,GAArB,CAAP;AACD;AACF,MAJM,MAIA,IAAInC,MAAM,CAAN,MAAa,GAAjB,EAAsB;AAC3B,WAAI+D,iBAAiB7B,GAAjB,EAAsBC,GAAtB,EAA2Bf,GAA3B,EAAgC1C,MAAhC,CAAJ,EAA6C;AAC3C,gBAAOyC,UAAUC,GAAV,EAAcc,GAAd,EAAmBC,GAAnB,CAAP;AACD;AACF,MAJM,MAIA,IAAInC,MAAM,CAAN,MAAa,GAAjB,EAAsB;AAC3B,WAAI+D,iBAAiB7B,GAAjB,EAAsBC,GAAtB,EAA2Bf,GAA3B,EAAgC1C,MAAhC,CAAJ,EAA6C;AAC3C,gBAAO8C,WAAWJ,GAAX,EAAec,GAAf,EAAoBC,GAApB,CAAP;AACD;AACF,MAJM,MAIA,IAAInC,MAAM,CAAN,MAAa,GAAjB,EAAsB;AAC3B,WAAI+D,iBAAiB7B,GAAjB,EAAsBC,GAAtB,EAA2Bf,GAA3B,EAAgC1C,MAAhC,CAAJ,EAA6C;AAC3C,aAAI0F,YAAYhD,GAAZ,EAAiBc,GAAjB,EAAsBC,GAAtB,EAA2BzD,MAA3B,CAAJ,EAAwC;AACtC,kBAAO,IAAP;AACD,UAFD,MAEO;AACL,kBAAOgD,UAAUN,GAAV,EAAcc,GAAd,EAAmBC,GAAnB,CAAP;AACD;AACF;AACF,MARM,MAQA,IAAInC,MAAM,CAAN,MAAa,GAAjB,EAAsB;AAC3B,WAAI4C,kBAAkBV,GAAlB,EAAuBC,GAAvB,EAA4Bf,GAA5B,EAAiC1C,MAAjC,CAAJ,EAA8C;AAC5C,gBAAO,IAAP;AACD,QAFD,MAEO,IAAI2F,qBAAqBnC,GAArB,EAA0BC,GAA1B,EAA+BzD,MAA/B,CAAJ,EAA4C;AACjD,gBAAO+C,UAAUS,GAAV,EAAeC,GAAf,EAAoBf,GAApB,EAAyB1C,MAAzB,CAAP;AACD;AACF;AACF,IAzTc;AA2Tf2F,uBA3Te,gCA2TOnC,GA3TP,EA2TYC,GA3TZ,EA2TiBzD,MA3TjB,EA2TyB;AACtC,SAAIA,OAAOyD,GAAP,EAAYD,GAAZ,EAAiB,CAAjB,EAAoB,CAApB,MAA2B,GAA/B,EAAoC;AAClC,cAAO,KAAP;AACD;AACD,YAAO,IAAP;AACD,IAhUc;AAkUfkC,cAlUe,uBAkUFhD,GAlUE,EAkUGc,GAlUH,EAkUQC,GAlUR,EAkUazD,MAlUb,EAkUqB;AAClC,SAAI0E,OAAO,CAAChC,IAAI,CAAJ,CAAD,EAAQA,IAAI,CAAJ,CAAR,CAAX;AACA,SAAId,QAAQ5B,OAAO0C,IAAI,CAAJ,CAAP,EAAeA,IAAI,CAAJ,CAAf,EAAuB,CAAvB,EAA0B,CAA1B,CAAZ;AACA,SAAIc,QAAQ,CAAR,IAAaC,QAAQf,IAAI,CAAJ,CAArB,IAA+B2C,iBAAiB7B,MAAM,CAAvB,EAA0BC,GAA1B,EAA+Bf,GAA/B,EAAoC1C,MAApC,CAA/B,IACA2D,WAAWH,MAAM,CAAjB,EAAoBC,GAApB,EAAyBf,GAAzB,EAA8B1C,MAA9B,CADA,IAEA4E,cAAcF,IAAd,EAAoB1E,MAApB,EAA4B4B,UAAU,GAAV,GAAgB,GAAhB,GAAsB,GAAlD,EAAsD,KAAtD,EAA6DL,MAA7D,KAAwE,CAF5E,EAE+E;AAC7E,cAAO3B,aAAagC,KAAb,EAAoBgE,qBAA3B;AACD,MAJD,MAIO,IAAIpC,QAAQ,CAAR,IAAaC,QAAQf,IAAI,CAAJ,CAArB,IAA+B2C,iBAAiB7B,GAAjB,EAAsBC,GAAtB,EAA2Bf,GAA3B,EAAgC1C,MAAhC,CAA/B,IACP2D,WAAWH,MAAM,CAAjB,EAAoBC,GAApB,EAAyBf,GAAzB,EAA8B1C,MAA9B,CADO,IAEP4E,cAAcF,IAAd,EAAoB1E,MAApB,EAA4B4B,UAAU,GAAV,GAAgB,GAAhB,GAAsB,GAAlD,EAAsD,KAAtD,EAA6DL,MAA7D,KAAwE,CAFrE,EAEwE;AAC7E,cAAO3B,aAAagC,KAAb,EAAoBiE,oBAA3B;AACD;AACF,IA9Uc;AAgVfR,mBAhVe,4BAgVG7B,GAhVH,EAgVQC,GAhVR,EAgVaC,IAhVb,EAgVmB1D,MAhVnB,EAgV6C;AAAA,SAAlB8E,QAAkB,yDAAP,KAAO;;AAAA,gCAC3CpB,IAD2C;;AAAA,SACnDL,CADmD;AAAA,SAChDD,CADgD;;AAE1D,SAAMxB,QAAQ5B,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,SAAMgB,KAAKb,MAAMH,CAAjB;AACA,SAAMiB,KAAKb,MAAML,CAAjB;AACA,SAAM0C,QAAQzB,KAAKL,KAAKC,GAAL,CAASI,EAAT,CAAL,IAAqB,CAAnC;AACA,SAAM0B,QAAQzB,KAAKN,KAAKC,GAAL,CAASK,EAAT,CAAL,IAAqB,CAAnC;AACA,SAAID,OAAO,CAAP,IAAYC,OAAO,CAAvB,EAA0B;AACxB,YAAK,IAAIvC,IAAI,CAAb,EAAgBA,KAAKiC,KAAKC,GAAL,CAASK,EAAT,CAArB,EAAkCvC,GAAlC,EAAuC;AACrC,aAAI/B,OAAOoD,IAAG2C,QAAMhE,CAAhB,EAAoBsB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,MAAiCzB,KAAjC,IAA0C,CAACkD,QAA3C,IACD9E,OAAOoD,IAAG2C,QAAMhE,CAAhB,EAAoBsB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,MAAiC,GAAjC,IAAwCtB,IAAIiC,KAAKC,GAAL,CAASK,EAAT,CAD/C,EAC8D;AAC5D,kBAAO,KAAP;AACD;AACF;AACD,cAAO,IAAP;AACD,MARD,MAQO,IAAIA,OAAO,CAAP,IAAaD,OAAO,CAAxB,EAA2B;AAChC,YAAK,IAAItC,KAAI,CAAb,EAAgBA,MAAKiC,KAAKC,GAAL,CAASI,EAAT,CAArB,EAAkCtC,IAAlC,EAAuC;AACrC,aAAI/B,OAAOoD,CAAP,EAAUC,IAAGyC,QAAM/D,EAAnB,EAAuB,CAAvB,EAA0B,CAA1B,MAAiCH,KAAjC,IAA0C,CAACkD,QAA3C,IACD9E,OAAOoD,CAAP,EAAUC,IAAGyC,QAAM/D,EAAnB,EAAuB,CAAvB,EAA0B,CAA1B,MAAiC,GAAjC,IAAwCA,KAAIiC,KAAKC,GAAL,CAASI,EAAT,CAD/C,EAC8D;AAC5D,kBAAO,KAAP;AACD;AACF;AACD,cAAO,IAAP;AACD,MARM,MAQA,IAAIL,KAAKC,GAAL,CAASI,EAAT,IAAeL,KAAKC,GAAL,CAASK,EAAT,CAAf,KAAgC,CAApC,EAAuC;AAC5C,YAAK,IAAIvC,MAAI,CAAb,EAAgBA,OAAKiC,KAAKC,GAAL,CAASI,EAAT,CAArB,EAAkCtC,KAAlC,EAAuC;AACrC,aAAI/B,OAAOoD,IAAG2C,QAAMhE,GAAhB,EAAoBsB,IAAGyC,QAAM/D,GAA7B,EAAiC,CAAjC,EAAoC,CAApC,MAA2CH,KAA3C,IAAoD,CAACkD,QAArD,IACD9E,OAAOoD,IAAG2C,QAAMhE,GAAhB,EAAoBsB,IAAGyC,QAAM/D,GAA7B,EAAiC,CAAjC,EAAoC,CAApC,MAA2C,GAA3C,IAAkDA,MAAIiC,KAAKC,GAAL,CAASI,EAAT,CADzD,EACwE;AACtE,kBAAO,KAAP;AACD;AACF;;AAED,cAAO,IAAP;AACD,MATM,MASA;AACL,cAAO,KAAP;AACD;AACF,IAnXc;AAqXf2B,aArXe,sBAqXHxC,GArXG,EAqXEC,GArXF,EAqXOzD,MArXP,EAqXe;AAC5B,SAAIuF,QAAQ/B,MAAM,CAAN,GAAU,CAAC,CAAD,EAAIC,GAAJ,CAAV,GAAqB,CAAC,CAAD,EAAIA,GAAJ,CAAjC;AACA,SAAInC,QAAQtB,OAAOuF,MAAM,CAAN,CAAP,EAAiBA,MAAM,CAAN,CAAjB,EAA2B,CAA3B,CAAZ;AACAvF,YAAOyD,GAAP,EAAYD,GAAZ,EAAiB,CAAjB,IAAsBlC,KAAtB;AACAtB,YAAOuF,MAAM,CAAN,CAAP,EAAiBA,MAAM,CAAN,CAAjB,EAA2B,CAA3B,IAAgC,KAAhC;AACD,IA1Xc;AA4XfU,iBA5Xe,0BA4XCzC,GA5XD,EA4XMC,GA5XN,EA4XWC,IA5XX,EA4XiB1D,MA5XjB,EA4XyB;AAAA,iCACvB0D,IADuB;;AAAA,SAC/BL,CAD+B;AAAA,SAC5BD,CAD4B;;AAEtC,SAAMxB,QAAQ5B,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,SAAMe,WAAWxC,UAAU,GAAV,GAAgB,GAAhB,GAAsB,GAAvC;AACA,SAAMsE,YAAY1C,MAAM,CAAN,GAAUxD,OAAOyD,GAAP,EAAYD,MAAM,CAAlB,EAAqB,CAArB,CAAV,GAAoC,CAAC,KAAD,CAAtD;AACA,SAAM2C,WAAW3C,MAAM,CAAN,GAAUxD,OAAOyD,GAAP,EAAYD,MAAM,CAAlB,EAAqB,CAArB,CAAV,GAAoC,CAAC,KAAD,CAArD;AACA5D,kBAAawE,QAAb,EAAuB1D,SAAvB,GAAmC,EAAC6D,QAAQ,KAAT,EAAgB7B,KAAK,EAArB,EAAnC;AACA,SAAIyD,SAAS,CAAT,MAAgB,GAAhB,IAAuBA,SAAS,CAAT,MAAgB/B,QAA3C,EAAqD;AACnDxE,oBAAawE,QAAb,EAAuB1D,SAAvB,GAAmC,EAAC6D,QAAQ,IAAT,EAAe7B,KAAK,CAACc,MAAM,CAAP,EAAUC,GAAV,EAAe,CAAf,CAApB,EAAnC;AACD,MAFD,MAEO,IAAIyC,UAAU,CAAV,MAAiB,GAAjB,IAAwBA,UAAU,CAAV,MAAiB9B,QAA7C,EAAuD;AAC5DxE,oBAAawE,QAAb,EAAuB1D,SAAvB,GAAmC,EAAC6D,QAAQ,IAAT,EAAe7B,KAAK,CAACc,MAAM,CAAP,EAAUC,GAAV,EAAe,CAAC,CAAhB,CAApB,EAAnC;AACD;AACF,IAxYc;AA0Yf2C,mBA1Ye,4BA0YG/C,CA1YH,EA0YMD,CA1YN,EA0YSpD,MA1YT,EA0YiB;AAC9BA,YAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,IAAkB,KAAlB;AACD,IA5Yc;AA8YfN,YA9Ye,qBA8YJS,GA9YI,EA8YCC,GA9YD,EA8YMC,IA9YN,EA8YY1D,MA9YZ,EA8YoB;AAAA,iCAClB0D,IADkB;;AAAA,SAC1BL,CAD0B;AAAA,SACvBD,CADuB;;AAEjC,SAAMxB,QAAQ5B,OAAOoD,CAAP,EAAUC,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAd;AACA,SAAMS,KAAKlC,UAAU,GAAV,GAAgB4B,MAAMH,CAAtB,GAA0BA,IAAIG,GAAzC;AACA,SAAMO,KAAKnC,UAAU,GAAV,GAAgB6B,MAAML,CAAtB,GAA0BA,IAAIK,GAAzC;AACA,YACGK,OAAO,CAAP,IAAYC,OAAO,CAAC,CAArB,IACCX,MAAM,CAAN,IAAWW,OAAO,CAAC,CAAnB,IAAwBD,OAAO,CAA/B,IAAoC9D,OAAO,CAAP,EAAUqD,CAAV,EAAa,CAAb,EAAgB,CAAhB,MAAuB,GAD5D,IAECD,MAAM,CAAN,IAAWW,OAAO,CAAC,CAAnB,IAAwBD,OAAO,CAA/B,IAAoC9D,OAAO,CAAP,EAAUqD,CAAV,EAAa,CAAb,EAAgB,CAAhB,MAAuB,GAF5D,IAGAa,kBAAkBV,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC1D,MAAlC,CAJF;AAMD;AAzZc,EAAjB,C;;;;;;;;;;;;ACAA,KAAMV,KAAK,mBAAAD,CAAQ,CAAR,CAAX;;AAEA,KAAMgH,eAAe;AACnB,QAAK,GADc;AAEnB,QAAK,GAFc;AAGnB,QAAK,GAHc;AAInB,QAAK,GAJc;AAKnB,QAAK,GALc;AAMnB,QAAK;AANc,EAArB;;KASMxF,S;AACJ,sBAAYL,IAAZ,EAAiBR,MAAjB,EAAwBJ,YAAxB,EAAqCK,KAArC,EAA4C;AAAA;;AAC1C,UAAKO,IAAL,GAAYA,IAAZ;AACA,UAAKR,MAAL,GAAcA,MAAd;AACA,UAAKJ,YAAL,GAAoBA,YAApB;AACA,UAAK4B,IAAL,GAAY5B,aAAauB,WAAzB;AACA,UAAKlB,KAAL,GAAaA,KAAb;AACA,UAAKQ,SAAL,GAAiB,KAAjB;AACA,UAAKkB,KAAL,GAAa,KAAK2E,YAAL,EAAb;AACD;;;;oCAEe;AACd,WAAIC,WAAWjH,GAAGmF,QAAH,CAAY3E,KAAK,KAAKE,MAAV,CAAZ,EAA8B,KAAKQ,IAAL,CAAU,CAAV,CAA9B,EAA2C,KAAKA,IAAL,CAAU,CAAV,CAA3C,CAAf;AACA,WAAIgG,YAAYtF,cAAcqF,QAAd,EAAuB,KAAK/E,IAA5B,CAAhB;AACA,WAAIiF,cAAcvF,cAAcqF,QAAd,EAAuB,KAAK/E,IAAL,KAAc,GAAd,GAAoB,GAApB,GAA0B,GAAjD,CAAlB;AACA,WAAIkF,gBAAgB,KAAKC,YAAL,CAAkBJ,QAAlB,EAA4BC,SAA5B,EAAuCC,WAAvC,CAApB;AACA,WAAIG,kBAAkB,KAAKC,YAAL,CAAkBN,QAAlB,EAA4BC,SAA5B,CAAtB;AACA,WAAIM,cAAc,KAAKC,WAAL,CAAiBR,QAAjB,EAA2BC,SAA3B,EAAsCC,WAAtC,CAAlB;AACA,cAAOC,gBAAgBE,eAAhB,GAAkCE,WAAzC;AACD;;;iCAEYN,S,EAAWC,W,EAAa;AACnC,WAAIK,cAAc,CAAlB;AACAA,sBAAe,KAAKE,iBAAL,CAAuB,KAAKhH,MAA5B,EAAmCyG,WAAnC,CAAf;AACA,YAAKQ,aAAL;AACA,cAAOH,WAAP;AACD;;;qCAEgB;AAAA;;AACf,WAAI9F,QAAQC,kBACEC,cAAc,KAAKlB,MAAnB,EAA0B,KAAKwB,IAAL,KAAc,GAAd,GAAoB,GAApB,GAA0B,GAApD,EACCJ,GADD,CACK;AAAA,gBAAQC,yBAAyBC,KAAzB,EAA+B,MAAKtB,MAApC,EAA2C,MAAKJ,YAAhD,CAAR;AAAA,QADL,CADF,CAAZ;AAIA,WAAIoB,MAAMO,MAAN,KAAiB,CAArB,EAAwB;AACtB,cAAKd,SAAL,GAAiB,IAAjB;AACD;AACF;;;uCAEiBV,K,EAAM0G,W,EAAa;AAAA;;AACnC,WAAIS,iBAAiB,EAArB;AACAT,mBAAYhF,OAAZ,CAAoB,iBAAS;AAC3B,aAAI0F,MAAM,OAAKC,qBAAL,CAA2BrH,KAA3B,EAAiCuB,KAAjC,CAAV;AACA,aAAI6F,MAAM,CAAV,EAAa;AACX,eAAI5D,WAAW,OAAKA,QAAL,CAAcxD,KAAd,EAAoBuB,KAApB,CAAf;AACA,eAAIK,QAAQ0E,aAAa/E,MAAMiB,IAAnB,CAAZ;AACE2E,0BAAe9E,IAAf,CAAoB,CAACT,QAAQwF,MAAM5D,QAAf,CAApB;AACH;AACF,QAPD;AAQA,WAAI8D,SAASH,eAAeI,IAAf,CAAoB,UAACC,CAAD,EAAGC,CAAH;AAAA,gBAAOA,IAAED,CAAT;AAAA,QAApB,CAAb;AACA,WAAIE,mBAAmBJ,OAAO,CAAP,KAAa,CAApC;AACA,cAAOrD,KAAK0D,GAAL,CAASD,gBAAT,EAA0B,CAA1B,CAAP;AACD;;;kCAEa1H,K,EAAOyG,S,EAAWC,W,EAAa;AAC3C,WAAIkB,WAAYnB,UACCpF,GADD,CACK;AAAA,gBAASiF,aAAa/E,MAAMiB,IAAnB,CAAT;AAAA,QADL,EAECqF,MAFD,CAEQ,UAACC,GAAD,EAAKC,EAAL;AAAA,gBAAYD,MAAMC,EAAlB;AAAA,QAFR,CAAhB;;AAIA,WAAIC,aAAatB,YACErF,GADF,CACM;AAAA,gBAASiF,aAAa/E,MAAMiB,IAAnB,CAAT;AAAA,QADN,EAEEqF,MAFF,CAES,UAACC,GAAD,EAAKC,EAAL;AAAA,gBAAYD,MAAMC,EAAlB;AAAA,QAFT,CAAjB;;AAIA,cAAOH,WAAWI,UAAlB;AACD;;;kCAEahI,K,EAAOyG,S,EAAW;AAAA;;AAC9B,WAAImB,WAAWnB,UACEpF,GADF,CACM;AAAA,gBAAQ,OAAK4G,wBAAL,CAA8B1G,KAA9B,EAAoCvB,KAApC,CAAR;AAAA,QADN,EAEE6H,MAFF,CAES,UAACC,GAAD,EAAKC,EAAL;AAAA,gBAAYD,MAAMC,EAAlB;AAAA,QAFT,CAAf;AAGA,cAAOH,QAAP;AACD;;;8BAES5H,K,EAAOuB,K,EAAO;AACtB;AACA,WAAIiC,WAAWqB,cAActD,MAAMoB,GAApB,EAAyB3C,KAAzB,EAAgCuB,MAAME,IAAtC,EAA4C,IAA5C,EAAkD,CAAlD,CAAf;AACA,WAAI+B,QAAJ,EAAc;AACZ,gBAAO,CAAP;AACD,QAFD,MAEO;AACL,gBAAO,CAAP;AACD;AACF;;;2CAEsBxD,K,EAAOuB,K,EAAO;AACnC,WAAI6F,MAAMvC,cAAetD,MAAMoB,GAArB,EAA0B3C,KAA1B,EAAiCuB,MAAME,IAAN,KAAe,GAAf,GAAqB,GAArB,GAA2B,GAA5D,EAAiE,KAAjE,CAAV;AACA,WAAI2F,IAAI,CAAJ,KAAUA,IAAI,CAAJ,EAAO,CAAP,CAAd,EAAyB;AACvB,gBAAOd,aAAac,IAAI,CAAJ,EAAO,CAAP,CAAb,CAAP;AACD,QAFD,MAEO;AACL,gBAAO,CAAP;AACD;AACF;;;8CAEyB7F,K,EAAMvB,K,EAAO;AACrC,WAAIkI,QAAQ,CAAZ;AACA,eAAQ3G,MAAMiB,IAAd;AACE,cAAK,GAAL;AACE0F,mBAAQ,KAAKC,mBAAL,CAAyB5G,KAAzB,EAA+BvB,KAA/B,CAAR;AACA;AACF,cAAK,GAAL;AACEkI,mBAAQ,KAAKE,mBAAL,CAAyB7G,KAAzB,EAA+BvB,KAA/B,CAAR;AACA;AACF,cAAK,GAAL;AACEkI,mBAAQ,KAAKG,qBAAL,CAA2B9G,KAA3B,EAAiCvB,KAAjC,CAAR;AACA;AACF,cAAK,GAAL;AACEkI,mBAAQ,KAAKI,qBAAL,CAA2B/G,KAA3B,EAAiCvB,KAAjC,CAAR;AACA;AACF,cAAK,GAAL;AACEkI,mBAAQ,KAAKK,oBAAL,CAA0BhH,KAA1B,EAAgCvB,KAAhC,CAAR;AACA;AACF,cAAK,GAAL;AACEkI,mBAAQ,KAAKM,mBAAL,CAAyBjH,KAAzB,EAA+BvB,KAA/B,CAAR;AACA;AACF;;AAnBF;AAsBA,cAAOkI,KAAP;AACD;;;yCAEoB9D,I,EAAKpE,K,EAAO;AAC/B,WAAIyI,OAAOrE,KAAKzB,GAAL,CAAS,CAAT,CAAX;AAAA,WACE+F,OAAOtE,KAAKzB,GAAL,CAAS,CAAT,CADT;AAAA,WAEEuF,QAAQ,CAFV;;AAIAA,gBACE,MAAM,QAAQjE,KAAKC,GAAL,CAAS,MAAMwE,IAAf,IAAwBzE,KAAKC,GAAL,CAAS,MAAMuE,IAAf,CAAhC,CAAN,CADF;AAGA,WAAIrB,MAAM,KAAKC,qBAAL,CAA4BrH,KAA5B,EAAmCoE,IAAnC,CAAV;AACA,WAAIgD,MAAM,CAAV,EAAa;AACXc,kBAASjE,KAAK0D,GAAL,CAASrB,aAAalC,KAAK5B,IAAlB,IAA0B4E,MAAO,KAAK5D,QAAL,CAAcxD,KAAd,EAAoBoE,IAApB,CAA1C,EAAqE,CAArE,CAAT;AACD;;AAED,cAAO8D,KAAP;AACD;;;yCAEoBS,I,EAAK3I,K,EAAO;AAC/B,WAAIiB,QAAQK,yBAA0BqH,IAA1B,EAA+B3I,KAA/B,EAAqC,KAAKH,YAA1C,CAAZ;AACA,WAAIqI,QAAQ,CAAZ;;AAEA,WAAId,MAAM,KAAKC,qBAAL,CAA4BrH,KAA5B,EAAmC2I,IAAnC,CAAV;AACA,WAAIvB,MAAM,CAAV,EAAa;AACXc,kBAASjE,KAAK0D,GAAL,CAASrB,aAAaqC,KAAKnG,IAAlB,IAA0B4E,MAAO,KAAK5D,QAAL,CAAcxD,KAAd,EAAoB2I,IAApB,CAA1C,EAAqE,CAArE,CAAT;AACD;AACD,cAAO1H,MAAMO,MAAN,GAAe,CAAf,GAAmB0G,KAA1B;AACD;;;2CAEsBU,M,EAAO5I,K,EAAO;AACnC,WAAIkI,QAAQ,CAAZ;AACA,WAAIjH,QAAQK,yBAA0BsH,MAA1B,EAAiC5I,KAAjC,EAAuC,KAAKH,YAA5C,CAAZ;AACAoB,aAAMS,OAAN,CAAc,gBAAQ;AACpBwG,kBACE,MAAM,OAAOjE,KAAKC,GAAL,CAAS,MAAMzD,KAAK,CAAL,EAAQ,CAAR,CAAf,CAAP,GAAqCwD,KAAKC,GAAL,CAAS,MAAMzD,KAAK,CAAL,EAAQ,CAAR,CAAf,CAA3C,CADF;AAGD,QAJD;AAKA,WAAI2G,MAAM,KAAKC,qBAAL,CAA4BrH,KAA5B,EAAmC4I,MAAnC,CAAV;AACA,WAAIxB,MAAM,CAAV,EAAa;AACXc,kBAASjE,KAAK0D,GAAL,CAASrB,aAAasC,OAAOpG,IAApB,IAA4B4E,MAAO,KAAK5D,QAAL,CAAcxD,KAAd,EAAoB4I,MAApB,CAA5C,EAAyE,CAAzE,CAAT;AACD;AACD,WAAI,KAAKpF,QAAL,CAAcxD,KAAd,EAAoB4I,MAApB,CAAJ,EAAiC;AAC/BV,kBAAS,EAAT;AACD;AACD,cAAOA,KAAP;AACD;;;2CAEsBW,M,EAAO7I,K,EAAO;AACnC,WAAIkI,QAAQ,CAAZ;AACA,WAAIjH,QAAQK,yBAA0BuH,MAA1B,EAAiC7I,KAAjC,EAAuC,KAAKH,YAA5C,CAAZ;AACA,WAAIuH,MAAM,KAAKC,qBAAL,CAA4BrH,KAA5B,EAAmC6I,MAAnC,CAAV;AACA,WAAIzB,MAAM,CAAV,EAAa;AACXc,kBAASjE,KAAK0D,GAAL,CAASrB,aAAauC,OAAOrG,IAApB,IAA4B4E,MAAO,KAAK5D,QAAL,CAAcxD,KAAd,EAAoB6I,MAApB,CAA5C,EAAyE,CAAzE,CAAT;AACD;AACD,WAAI,KAAKrF,QAAL,CAAcxD,KAAd,EAAoB6I,MAApB,CAAJ,EAAiC;AAC/BX,kBAAS,EAAT;AACD;AACD,cAAOjH,MAAMO,MAAN,GAAe,CAAf,GAAmB0G,KAA1B;AACD;;;0CAEqBY,K,EAAM9I,K,EAAO;AACjC,WAAIkI,QAAQ,CAAZ;AACA,WAAIjH,QAAQK,yBAA0BwH,KAA1B,EAAgC9I,KAAhC,EAAsC,KAAKH,YAA3C,CAAZ;AACA,WAAIuH,MAAM,KAAKC,qBAAL,CAA4BrH,KAA5B,EAAmC8I,KAAnC,CAAV;AACA,WAAI1B,MAAM,CAAV,EAAa;AACXc,kBAASjE,KAAK0D,GAAL,CAASrB,aAAawC,MAAMtG,IAAnB,IAA2B4E,MAAO,KAAK5D,QAAL,CAAcxD,KAAd,EAAoB8I,KAApB,CAA3C,EAAuE,CAAvE,CAAT;AACD;;AAED,cAAO7H,MAAMO,MAAN,GAAe,CAAf,GAAmB0G,KAA1B;AACD;;;yCAEoBvD,I,EAAK3E,K,EAAO;AAC/B,WAAIyI,OAAO9D,KAAKhC,GAAL,CAAS,CAAT,CAAX;AAAA,WACE+F,OAAO/D,KAAKhC,GAAL,CAAS,CAAT,CADT;AAAA,WAEEuF,QAAQ,CAFV;AAAA,WAGEjD,OAAOwD,SAAS,CAAT,GAAa,IAAb,GAAqBA,OAAO,CAHrC;AAAA,WAIEvD,QAAQuD,SAAS,CAAT,GAAa,IAAb,GAAqBA,OAAO,CAJtC;AAAA,WAKEzD,OAAOL,KAAKlD,IAAL,KAAc,GAAd,GACNiH,SAAS,CAAT,GAAa,IAAb,GAAqBA,OAAO,CADtB,GAC6BA,SAAS,CAAT,GAAa,IAAb,GAAqBA,OAAO,CANlE;AAOA,QAACzD,IAAD,EAAOwD,IAAP,EAAavD,KAAb,EAAoBzC,MAApB,CAA2B;AAAA,gBAAIsF,EAAJ;AAAA,QAA3B,EAAmCrG,OAAnC,CAA2C,kBAAU;AACnD,aAAIS,aAAanC,MAAMgF,IAAN,EAAY+D,MAAZ,EAAoB,CAApB,CAAjB;AACA,aAAI5G,WAAW,CAAX,MAAkBwC,KAAKlD,IAA3B,EAAiC;AAC/B,eAAIU,WAAW,CAAX,MAAkB,GAAtB,EAA2B;AACzB+F,sBAAS,EAAT;AACD,YAFD,MAEO;AACLA,sBAAS,EAAT;AACD;AACF;AACF,QATD;AAUA,WAAKvD,KAAKhC,GAAL,CAAS,CAAT,MAAgB,CAAjB,IAAwBgC,KAAKhC,GAAL,CAAS,CAAT,MAAgB,CAA5C,EAAgD;AAC9CuF,kBAAS,GAAT;AACD;AACD,cAAOA,KAAP;AACD;;;;;;AAGHnH,QAAOC,OAAP,GAAiBF,SAAjB,C","file":"b02403cb2dfa15a82858.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b02403cb2dfa15a82858\n **/","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/move_worker.js\n **/","const Ai = require('./ai.js');\nconst BoardNode = require('./board_node.js');\n\nmodule.exports = {\n  findBestMove (board,specMoves,depth) {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(board,specMoves.currentSide)\n                  .map(piece=> this.findAllLegalMovesByPiece(piece,board,specMoves))\n                );\n    if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n    let bestMove = null;\n    moves.forEach(move => {\n      let currentNode = new BoardNode(move,board,specMoves,depth);\n      if (currentNode.checkmate) {\n        return {move: currentNode.move, checkmate: true};\n      }\n      bestMove = bestMove ?\n        (currentNode.score > bestMove.score ?\n          currentNode : bestMove) : currentNode;\n    });\n    return {move: bestMove.move};\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/logic_bridge.js\n **/","module.exports = {\n  specialMoves: {},\n\n  findAllPieces (board,color) {\n    let returnPieces = [];\n    board.forEach((row,i)=>{\n      row.forEach((square,j)=>{\n        let testSquare = this.parseSquare(board,i,j);\n        if (testSquare.side === color) {\n          returnPieces.push(testSquare);\n        }\n      });\n    });\n    return returnPieces;\n  },\n\n  findAllLegalMovesByPiece (piece, board, specMoves) {\n    let allSquares = [];\n    let allMoves;\n    for (let i=0;i<8;i++) {\n      for (let j=0;j<8;j++) {\n        allSquares.push([j,i]);\n      }\n    }\n    if (piece.type === 'r') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.rookMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'n') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.knightMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'b') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.bishopMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'q') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.queenMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'p') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.pawnMoves(square[0], square[1], piece.pos, board);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'k') {\n      allMoves = allSquares.filter(square=> {\n        return Ai.kingMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return Ai.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n    return allMoves;\n  },\n\n  parseMoveClusters (array) {\n    let result = [];\n    array.forEach(subArray => {\n      subArray.forEach(move => {\n        result.push(move);\n      });\n    });\n    return result;\n  },\n\n  parseSquare (pieces, y, x) {\n    let pieceInfo = {\n      side: pieces[y][x][0][0],\n      type: pieces[y][x][0][2],\n      pos: [x,y],\n      defended: false\n    };\n    return pieceInfo;\n  },\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (notInCheck(toX, toY, from, pieces)) {\n      if (checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0);\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = dupe(pieces);\n    let afterMove = testMove(testBoard, from, [toX, toY]);\n    let king = findKing(afterMove,color); //[y,x];\n    if (findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        if (checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (checkPawnObstruction(toX, toY, pieces)) {\n        return pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (toX === 2 && toY === pos[1] && checkObstruction(toX - 1, toY, pos, pieces) &&\n        notInCheck(toX + 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && checkObstruction(toX, toY, pos, pieces) &&\n        notInCheck(toX - 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/ai.js\n **/","const Ai = require('./ai.js');\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = Ai.testMove(dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = findAllPieces(newBoard,this.side);\n    let otherPieces = findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = parseMoveClusters(\n                  findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if ((king.pos[0] === 6) || (king.pos[0] === 2)) {\n      value += 100;\n    }\n    return value;\n  }\n}\n\nmodule.exports = BoardNode;\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/board_node.js\n **/"],"sourceRoot":""}