{"version":3,"sources":["webpack:///webpack/bootstrap fb17610b72e58f7e70ba","webpack:///./logic/move_worker.js","webpack:///./logic/logic_bridge.js","webpack:///./logic/board_node.js","webpack:///./logic/ai.js","webpack:///./logic/ai_new.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","BoardNode","module","exports","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","PIECE_VALUES","evaluateMove","newBoard","testMove","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","defended","type","push","sorted","sort","a","b","secondBestAttack","Math","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","findAttackers","pos","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","pawn","posX","posY","abs","rook","knight","bishop","queen","king","left","right","yDir","filter","testSquare","xCoord","color","converted","legalMoves","allLegalMoves","returnPieces","row","i","square","j","parseSquare","allSquares","allMoves","rookMoves","canMove","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","toX","toY","from","notInCheck","checkMove","selected","dx","dy","checkPawnCaptures","oppColor","dX","dY","status","afterMove","findKing","colorToCheck","sameSide","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant","convertBoard","boardString","n","m","split","toUpperCase","test","positions","concat","inCheck","makeMove","kingPos","findPiece","hasAttackers","position","bishopsQueensCheck","currentPos","toLowerCase","inBounds","rooksQueensCheck","knightChecks","pawnChecks","kingChecks","legalDirs","captureDirs","capturePos","canTake","floor","min","queenSideCastle","emptyBetween","kingSideCastle"],"mappings":"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","file":"fb17610b72e58f7e70ba.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fb17610b72e58f7e70ba","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/move_worker.js","// const Ai = require('./ai.js');\nconst BoardNode = require('./board_node.js');\n\nmodule.exports = {\n  findBestMove (board,specMoves,depth) {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(board,specMoves.currentSide)\n                  .map(piece=> Ai.findAllLegalMovesByPiece(piece,board,specMoves))\n                );\n    if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n    let bestMove = null;\n    moves.forEach(move => {\n      let currentNode = new BoardNode(move,board,specMoves,depth);\n      if (currentNode.checkmate) {\n        return {move: currentNode.move, checkmate: true};\n      }\n      bestMove = bestMove ?\n        (currentNode.score > bestMove.score ?\n          currentNode : bestMove) : currentNode;\n    });\n    return {move: bestMove.move};\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/logic_bridge.js","const Ai = require('./ai.js');\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = Ai.testMove(Ai.dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = Ai.findAllPieces(newBoard,this.side);\n    let otherPieces = Ai.findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> Ai.findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = Ai.findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = Ai.findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = Ai.findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if (king.pos[0] === 6) {\n      value += 200;\n    }\n    return value;\n  }\n}\n\nmodule.exports = BoardNode;\n\n\n\n// WEBPACK FOOTER //\n// ./logic/board_node.js","import Ai from './ai_new.js';\n\nmodule.exports = {\n  specialMoves: {},\n\n  findAllPieces (board,color) {\n    let converted = new Ai(board,this.specialMoves);\n    let legalMoves = converted.allLegalMoves(\n      converted.findAllPieces('b')\n    );\n    let returnPieces = [];\n    board.forEach((row,i)=>{\n      row.forEach((square,j)=>{\n        let testSquare = this.parseSquare(board,i,j);\n        if (testSquare.side === color) {\n          returnPieces.push(testSquare);\n        }\n      });\n    });\n    return returnPieces;\n  },\n\n  findAllLegalMovesByPiece (piece, board, specMoves) {\n    let allSquares = [];\n    let allMoves;\n    for (let i=0;i<8;i++) {\n      for (let j=0;j<8;j++) {\n        allSquares.push([j,i]);\n      }\n    }\n    if (piece.type === 'r') {\n      allMoves = allSquares.filter(square=> {\n        return this.rookMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'n') {\n      allMoves = allSquares.filter(square=> {\n        return this.knightMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'b') {\n      allMoves = allSquares.filter(square=> {\n        return this.bishopMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'q') {\n      allMoves = allSquares.filter(square=> {\n        return this.queenMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'p') {\n      allMoves = allSquares.filter(square=> {\n        return this.pawnMoves(square[0], square[1], piece.pos, board);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'k') {\n      allMoves = allSquares.filter(square=> {\n        return this.kingMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n    return allMoves;\n  },\n\n  parseMoveClusters (array) {\n    let result = [];\n    array.forEach(subArray => {\n      subArray.forEach(move => {\n        result.push(move);\n      });\n    });\n    return result;\n  },\n\n  parseSquare (pieces, y, x) {\n    let pieceInfo = {\n      side: pieces[y][x][0][0],\n      type: pieces[y][x][0][2],\n      pos: [x,y],\n      defended: false\n    };\n    return pieceInfo;\n  },\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    this.specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (this.notInCheck(toX, toY, from, pieces)) {\n      if (this.checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return ((Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0)) ||\n           (x === 4 && y === 0 && ((toX === 6) || (toX === 2)));\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = this.specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = this.dupe(pieces);\n    let afterMove = this.testMove(testBoard, from, [toX, toY]);\n    let king = this.findKing(afterMove,color); //[y,x];\n    if (this.findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return this.knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        if (this.checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return this.kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (this.checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (this.checkPawnObstruction(toX, toY, pieces)) {\n        return this.pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    if (pos[0] !== 4) return false;\n\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (this.findAttackers(king,pieces,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    }\n    if (toX === 2 && toY === pos[1] && this.checkObstruction(toX - 1, toY, pos, pieces) &&\n        this.notInCheck(toX + 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && this.checkObstruction(toX, toY, pos, pieces) &&\n        this.notInCheck(toX - 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    this.specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      this.checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai.js","export default class Ai {\n  constructor (board,specialMoves) {\n    this.specialMoves = specialMoves;\n    this.board = this.convertBoard(board);\n  }\n\n  //RNBQKBNRPPPPPPPP----------------\n  //----------------pppppppprnbqkbnr\n  convertBoard (board) {\n    let boardString = '----------';\n    for (let i = 0, n = board.length; i < n; i++) {\n      boardString += '-';\n      for (let j = 0, m = board[i].length; j < m; j++) {\n        let piece = board[i][j][0];\n        let type = piece.split('-')[1];\n        if (type === 'l') {\n          boardString += '-';\n        } else if (piece.split('-')[0] === 'b') {\n          boardString += type.toUpperCase();\n        } else {\n          boardString += type;\n        }\n      }\n      boardString += '-';\n    }\n    boardString += '----------';\n    return boardString;\n  }\n\n  color (pos,board = this.board) {\n    if (/[a-z]/.test(board[pos])) {\n      return 'w';\n    } else {\n      return 'b';\n    }\n  }\n\n  findAllPieces (color, board = this.board) {\n    let positions = [];\n    for (let i = 0, n = board.length; i < n; i++) {\n      let piece = board[i];\n      if (piece !== '-' && this.color(i) === color) {\n        positions.push(i);\n      }\n    }\n    return positions;\n  }\n\n  allLegalMoves (positions, board = this.board) {\n    let moves = [];\n    for (let i = 0; i < positions.length; i++) {\n      moves = moves.concat(this.findAllLegalMovesByPiece(positions[i],board));\n    }\n    return moves.filter(move => !this.inCheck(move,board));\n  }\n\n  inCheck (move, board = this.board, color = 'b') {\n    let newBoard = this.makeMove(move, board);\n    let kingPos = this.findPiece('k', color, board)[0];\n    return this.hasAttackers(kingPos, newBoard, color);\n  }\n\n  findPiece (piece, color, board = this.board) {\n    if (color === 'b') piece = piece.toUpperCase();\n    let pos = [];\n    for (let i = 0; i < 100; i++) {\n      if (board[i] === piece) {\n        if (piece === 'K' || piece === 'k' ||\n          piece === 'Q' || piece === 'q') {\n            return [i];\n          }\n        pos.push(i);\n      }\n    }\n    return pos;\n  }\n\n  hasAttackers (position, board = this.board, color = 'b') {\n    let bishopsQueensCheck = [-11,-9,11,9];\n    for (let i = 0; i < bishopsQueensCheck.length; i++) {\n      let currentPos = position + bishopsQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += bishopsQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'b' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let rooksQueensCheck = [-1,1,-10,10];\n    for (let i = 0; i < rooksQueensCheck.length; i++) {\n      let currentPos = position + rooksQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += rooksQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'r' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let knightChecks = [-12,-21,-19,-8,12,21,19,8];\n    for (let i = 0; i < knightChecks.length; i++) {\n      let currentPos = position + knightChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'n' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let pawnChecks = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < pawnChecks.length; i++) {\n      let currentPos = position + pawnChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'p' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let kingChecks = [-1,-11,-10,-9,1,11,10,9];\n    for (let i = 0; i < kingChecks.length; i++) {\n      let currentPos = position + kingChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'k' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  makeMove (move, board = this.board) {\n    let newBoard = \"\";\n    for (let i = 0; i < 100; i++) {\n      if (i === move[0]) {\n        newBoard += '-';\n      } else if (i === move[1]) {\n        newBoard += board[move[0]];\n      } else {\n        newBoard += board[i];\n      }\n    }\n    return newBoard;\n  }\n\n  findAllLegalMovesByPiece (position, board = this.board) {\n    let allMoves;\n    switch (board[position].toLowerCase()) {\n      case 'p':\n        allMoves = this.pawnMoves(position, board);\n        break;\n      case 'r':\n        allMoves = this.rookMoves(position, board);\n        break;\n      case 'n':\n        allMoves = this.knightMoves(position, board);\n        break;\n      case 'b':\n        allMoves = this.bishopMoves(position, board);\n        break;\n      case 'k':\n        allMoves = this.kingMoves(position, board);\n        break;\n      case 'q':\n        allMoves = this.queenMoves(position, board);\n        break;\n      default:\n        allMoves = [];\n    }\n    return allMoves;\n  }\n\n  inBounds (pos) {\n    return (pos > 9 && pos < 90 && pos % 10 !== 0 && pos % 10 !== 9);\n  }\n\n  checkObstruction (pos, board = this.board) {\n    return board[pos] === '-' && this.inBounds(pos);\n  }\n\n  canTake (color, pos, board = this.board) {\n    return this.inBounds(pos) && this.color(pos) !== color && board[pos] !== '-';\n  }\n\n  pawnMoves (position, board = this.board) {\n    let allMoves = [];\n    let color = this.color(position,board);\n    let legalDirs = [\n      10 * (color === 'w' ? - 1 : 1)\n    ];\n    if ((color === 'w' && position > 70) || (color === 'b' && position < 30)) {\n      legalDirs.push(20 * (color === 'w' ? - 1 : 1));\n    }\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n\n    let captureDirs = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < captureDirs.length; i++) {\n      let capturePos = position + captureDirs[i];\n      if (this.inBounds(capturePos) && this.canTake(color, capturePos)) {\n        allMoves.push([position,capturePos]);\n      }\n    }\n    // Remember to test again for en passant\n    if (this.specialMoves.enPassant &&\n      Math.abs(this.specialMoves - position) === 1) {\n        allMoves.push([position,this.specialMoves.enPassant +\n          (10 * color === 'w' ? -1 : 1)]);\n    }\n    return allMoves;\n  }\n\n  rookMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  knightMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-12,-21,-19,-8,12,21,19,8];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  bishopMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  kingMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,-11,-10,-9,1,11,10,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    allMoves = allMoves.concat(this.checkCastle(board, position));\n    return allMoves;\n  }\n\n  emptyBetween (board,from, to) {\n    // Check horizontal line\n    if (Math.floor(from / 10) === Math.floor(to / 10)) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\n        if (board[i] !== '-') return false;\n      }\n      // Check vertical line\n    } else if (from % 10 === to % 10) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i += 10) {\n        if (board[i] !== '-') return false;\n      }\n    } else {\n      // Check diagonal\n      if (Math.abs(from - to) % 11 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 11) {\n          if (board[i] !== '-') return false;\n        }\n      } else if (Math.abs(from - to) % 9 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 9) {\n          if (board[i] !== '-') return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  checkCastle (board, position) {\n    let moves = [];\n    let color = this.board[position] === 15 ? 'b' : 'w';\n    if (this.specialMoves.queenSideCastle) {\n      if (this.emptyBetween(board, position - 1, 12) && color === 'b') {\n        moves.push([position,13]);\n      } else if (this.emptyBetween(board, position - 1, 82)){\n        moves.push([position, 83]);\n      }\n    }\n\n    if (this.specialMoves.kingSideCastle) {\n      if (this.emptyBetween(board, position + 1, 17) && color === 'b') {\n        moves.push([position,17]);\n      } else if (this.emptyBetween(board, position + 1, 87)){\n        moves.push([position, 87]);\n      }\n    }\n    return moves;\n  }\n\n  queenMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10,-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai_new.js"],"sourceRoot":""}