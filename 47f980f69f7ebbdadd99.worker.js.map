{"version":3,"sources":["webpack:///webpack/bootstrap 47f980f69f7ebbdadd99","webpack:///./logic/move_worker.js","webpack:///./logic/board_node.js","webpack:///./logic/ai.js"],"names":["BoardNode","require","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","Ai","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","color","returnPieces","row","i","square","j","testSquare","parseSquare","push","allSquares","allMoves","type","filter","rookMoves","pos","canMove","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","defended","PIECE_VALUES","evaluateMove","newBoard","testMove","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","sorted","sort","a","b","secondBestAttack","Math","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","findAttackers","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","pawn","posX","posY","abs","rook","knight","bishop","queen","king","left","right","yDir","xCoord","toX","toY","from","notInCheck","checkMove","selected","dx","dy","checkPawnCaptures","oppColor","dX","dY","status","afterMove","findKing","colorToCheck","sameSide","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant"],"mappings":"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","file":"47f980f69f7ebbdadd99.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 47f980f69f7ebbdadd99\n **/","const BoardNode = require('./board_node.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = BoardNode.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = BoardNode.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/move_worker.js\n **/","const Ai = require('./ai.js');\n\nfunction findBestMove (board,specMoves,depth) {\n  let moves = parseMoveClusters(\n                findAllPieces(board,specMoves.currentSide)\n                .map(piece=> findAllLegalMovesByPiece(piece,board,specMoves))\n              );\n  if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n  let bestMove = null;\n  moves.forEach(move => {\n    let currentNode = new BoardNode(move,board,specMoves,depth);\n    if (currentNode.checkmate) {\n      return {move: currentNode.move, checkmate: true};\n    }\n    bestMove = bestMove ?\n      (currentNode.score > bestMove.score ?\n        currentNode : bestMove) : currentNode;\n  });\n  return {move: bestMove.move};\n}\n\nfunction findAllPieces (board,color) {\n  let returnPieces = [];\n  board.forEach((row,i)=>{\n    row.forEach((square,j)=>{\n      let testSquare = parseSquare(board,i,j);\n      if (testSquare.side === color) {\n        returnPieces.push(testSquare);\n      }\n    });\n  });\n  return returnPieces;\n}\n\nfunction findAllLegalMovesByPiece (piece, board, specMoves) {\n  let allSquares = [];\n  let allMoves;\n  for (let i=0;i<8;i++) {\n    for (let j=0;j<8;j++) {\n      allSquares.push([j,i]);\n    }\n  }\n  if (piece.type === 'r') {\n    allMoves = allSquares.filter(square=> {\n      return rookMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'n') {\n    allMoves = allSquares.filter(square=> {\n      return knightMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'b') {\n    allMoves = allSquares.filter(square=> {\n      return bishopMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'q') {\n    allMoves = allSquares.filter(square=> {\n      return queenMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'p') {\n    allMoves = allSquares.filter(square=> {\n      return pawnMoves(square[0], square[1], piece.pos, board);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'k') {\n    allMoves = allSquares.filter(square=> {\n      return kingMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n  return allMoves;\n}\n\nfunction parseMoveClusters (array) {\n  let result = [];\n  array.forEach(subArray => {\n    subArray.forEach(move => {\n      result.push(move);\n    });\n  });\n  return result;\n}\n\nfunction parseSquare (pieces, y, x) {\n  let pieceInfo = {\n    side: pieces[y][x][0][0],\n    type: pieces[y][x][0][2],\n    pos: [x,y],\n    defended: false\n  };\n  return pieceInfo;\n}\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = testMove(dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = findAllPieces(newBoard,this.side);\n    let otherPieces = findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = parseMoveClusters(\n                  findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if ((king.pos[0] === 6) || (king.pos[0] === 2)) {\n      value += 100;\n    }\n    return value;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/board_node.js\n **/","let specialMoves;\n\n//pieces = Array(8); specMoves = {currentSide,w:castleQueenSideStatus,castleKingSideStatus,enPassant,b:}\n\n// pieces: [\n//   [['b-r'],['b-n'],['b-b'],['b-q'],['b-k'],['b-b'],['b-n'],['b-r']],\n//   [['b-p'],['b-p'],['b-p'],['b-p'],['b-p'],['b-p'],['b-p'],['b-p']],\n//   [['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l']],\n//   [['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l']],\n//   [['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l']],\n//   [['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l'],['n-l']],\n//   [['w-p'],['w-p'],['w-p'],['w-p'],['w-p'],['w-p'],['w-p'],['w-p']],\n//   [['w-r'],['w-n'],['w-b'],['w-q'],['w-k'],['w-b'],['w-n'],['w-r']],\n// ]\n\nfunction canMove(toX, toY, pieces, from,specMoves) {\n  specialMoves = specMoves;\n  // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n  if (notInCheck(toX, toY, from, pieces)) {\n    if (checkMove(toX, toY, pieces, from)) return true;\n  }\n  return false;\n}\n\nfunction bishopMoves (selected, toX, toY) {\n  let [x, y] = selected;\n  let dx = toX - x;\n  let dy = toY - y;\n  return (Math.abs(dx) / Math.abs(dy) === 1);\n}\n\nfunction rookMoves (selected, toX, toY) {\n  let [x, y] = selected;\n  let dx = toX - x;\n  let dy = toY - y;\n  return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n}\n\nfunction queenMoves (selected, toX, toY) {\n  let [x, y] = selected;\n  let dx = toX - x;\n  let dy = toY - y;\n  return (Math.abs(dx) / Math.abs(dy) === 1) ||\n  (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n}\n\nfunction knightMoves (selected,toX, toY) {\n  const [x, y] = selected;\n  const dx = toX - x;\n  const dy = toY - y;\n  return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n         (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n}\n\nfunction kingMoves (selected, toX, toY) {\n  const [x, y] = selected;\n  const dx = toX - x;\n  const dy = toY - y;\n  return (Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n         (Math.abs(dx) + Math.abs(dy) > 0);\n}\n\nfunction checkPawnCaptures (toX, toY, pawn, pieces) {\n  const [x, y] = pawn;\n  const color = pieces[y][x][0][0];\n  const oppColor = color === 'w' ? 'b' : 'w';\n  const dX = toX - x;\n  const dY = toY - y;\n  const enPassant = specialMoves[color].enPassant;\n  if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n    return false;\n  } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n    pieces[toY][toX][0][0] !== color &&\n    pieces[toY][toX][0][0] !== 'n') {\n      return true;\n    } else if (enPassant.status) {\n      if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n        toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n          return true;\n      }\n    }\n  return false;\n}\n\nfunction notInCheck (toX, toY, from, pieces) {\n  let color = pieces[from[1]][from[0]][0][0];\n  let testBoard = dupe(pieces);\n  let afterMove = testMove(testBoard, from, [toX, toY]);\n  let king = findKing(afterMove,color); //[y,x];\n  if (findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction findAttackers (piece, board, colorToCheck, sameSide) {\n  if (!piece) return false;\n  let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n  let left = piece[0] - 1;\n  let right = piece[0] + 1;\n  let returnResult = [];\n  //test for pawns\n  if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n    board[yDir][left][0] === `${colorToCheck}-p`) {\n    returnResult.push([true,'p']);\n  } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n    board[yDir][right][0] === `${colorToCheck}-p`) {\n    returnResult.push([true, 'p']);\n  }\n  //test for knights\n  [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n    let x = piece[0] + coord[0];\n    let y = piece[1] + coord[1];\n    if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n      if (board[y][x][0] === `${colorToCheck}-n`) {\n        returnResult.push([true, 'n']);\n      }\n    }\n  });\n  //test for bishops/queens\n  [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n    let x = piece[0] + step[0],\n      y = piece[1] + step[1];\n    while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n      if (board[y][x][0] === `${colorToCheck}-b` &&\n        checkObstruction(x,y,piece,board,sameSide)) {\n        returnResult.push([true, 'b']);\n      } else if (board[y][x][0] === `${colorToCheck}-q` &&\n        checkObstruction(x,y,piece,board,sameSide)) {\n        returnResult.push([true, 'q']);\n      }\n      x += step[0];\n      y += step[1];\n    }\n  });\n  //test for rooks/queens\n  [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n    let x = piece[0] + step[0],\n      y = piece[1] + step[1];\n    while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n      if (board[y][x][0] === `${colorToCheck}-r` &&\n        checkObstruction(x,y,piece,board,sameSide)) {\n        returnResult.push([true, 'r']);\n      } else if (board[y][x][0] === `${colorToCheck}-q` &&\n        checkObstruction(x,y,piece,board,sameSide)) {\n        returnResult.push([true,'q']);\n      }\n      x += step[0];\n      y += step[1];\n    }\n  });\n\n  //test for king\n  [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n    let x = piece[0] + coord[0];\n    let y = piece[1] + coord[1];\n    if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n      if (board[y][x][0] === `${colorToCheck}-k`) {\n        returnResult.push([true, 'k']);\n      }\n    }\n  });\n  return returnResult;\n}\n\nfunction testMove (testBoard, from, to) {\n  let selected = from;\n  let start = testBoard[selected[1]][selected[0]][0];\n  let color = start[0];\n  if (testBoard[to[1]][to[0]][0][0] !== color) {\n    testBoard[to[1]][to[0]][0] = start;\n    testBoard[selected[1]][selected[0]][0] = 'n-l';\n  }\n  return testBoard;\n}\n\nfunction dupe (array) {\n  const duped = [[],[],[],[],[],[],[],[]];\n  for (let i=0;i<array.length;i++) {\n    for (let j=0;j<array[i].length;j++) {\n      let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n      duped[i].push([piece]);\n    }\n  }\n  return duped;\n}\n\nfunction findKing (pieces,color) {\n  const target = `${color}-k`;\n  for (let i=0; i<=7;i++) {\n    for (let j=0; j<=7;j++) {\n      if (pieces[i][j][0] === target) {\n        return [j, i];\n      }\n    }\n  }\n}\n\nfunction checkMove (toX, toY, pieces, from) {\n  let pos = from;\n  let piece = pieces[pos[1]][pos[0]][0];\n  let color = pieces[pos[1]][pos[0]][0][0];\n  if (piece[2] === 'n') {\n    if (pieces[toY][toX][0][0] !== color) {\n      return knightMoves(pos,toX, toY);\n    }\n  } else if (piece[2] === 'b') {\n    if (checkObstruction(toX, toY, pos, pieces)) {\n      return bishopMoves(pos,toX, toY);\n    }\n  } else if (piece[2] === 'r') {\n    if (checkObstruction(toX, toY, pos, pieces)) {\n      return rookMoves(pos,toX, toY);\n    }\n  } else if (piece[2] === 'q') {\n    if (checkObstruction(toX, toY, pos, pieces)) {\n      return queenMoves(pos,toX, toY);\n    }\n  } else if (piece[2] === 'k') {\n    if (checkObstruction(toX, toY, pos, pieces)) {\n      if (checkCastle(pos, toX, toY, pieces)) {\n        return true;\n      } else {\n        return kingMoves(pos,toX, toY);\n      }\n    }\n  } else if (piece[2] === 'p') {\n    if (checkPawnCaptures(toX, toY, pos, pieces)) {\n      return true;\n    } else if (checkPawnObstruction(toX, toY, pieces)) {\n      return pawnMoves(toX, toY, pos, pieces);\n    }\n  }\n}\n\nfunction checkPawnObstruction (toX, toY, pieces) {\n  if (pieces[toY][toX][0][0] !== 'n') {\n    return false;\n  }\n  return true;\n}\n\nfunction checkCastle (pos, toX, toY, pieces) {\n  let king = [pos[1],pos[0]];\n  let color = pieces[pos[1]][pos[0]][0][0];\n  if (toX === 2 && toY === pos[1] && checkObstruction(toX - 1, toY, pos, pieces) &&\n      notInCheck(toX + 1, toY, pos, pieces) &&\n      findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n    return specialMoves[color].castleQueenSideStatus;\n  } else if (toX === 6 && toY === pos[1] && checkObstruction(toX, toY, pos, pieces) &&\n      notInCheck(toX - 1, toY, pos, pieces) &&\n      findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n    return specialMoves[color].castleKingSideStatus;\n  }\n}\n\nfunction checkObstruction (toX, toY, from, pieces, sameSide = false) {\n  const [x, y] = from;\n  const color = pieces[y][x][0][0];\n  const dX = toX - x;\n  const dY = toY - y;\n  const xStep = dX / Math.abs(dX) || 0;\n  const yStep = dY / Math.abs(dY) || 0;\n  if (dX === 0 && dY !== 0) {\n    for (let i = 1; i <= Math.abs(dY);i++) {\n      if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n        (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n        return false;\n      }\n    }\n    return true;\n  } else if (dY === 0  && dX !== 0) {\n    for (let i = 1; i <= Math.abs(dX);i++) {\n      if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n        (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n    for (let i = 1; i <= Math.abs(dX);i++) {\n      if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n        (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction castleRook (toX, toY, pieces) {\n  let start = toX > 4 ? [7, toY] : [0, toY];\n  let piece = pieces[start[1]][start[0]][0];\n  pieces[toY][toX][0] = piece;\n  pieces[start[1]][start[0]][0] = 'n-l';\n}\n\nfunction checkEnPassant (toX, toY, from, pieces) {\n  const [x, y] = from;\n  const color = pieces[y][x][0][0];\n  const oppColor = color === 'w' ? 'b' : 'w';\n  const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n  const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n  specialMoves[oppColor].enPassant = {status: false, pos: []};\n  if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n    specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n  } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n    specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n  }\n}\n\nfunction captureEnPassant (x, y, pieces) {\n  pieces[y][x][0] = 'n-l';\n}\n\nfunction pawnMoves (toX, toY, from, pieces) {\n  const [x, y] = from;\n  const color = pieces[y][x][0][0];\n  const dx = color === 'w' ? toX - x : x - toX;\n  const dy = color === 'w' ? toY - y : y - toY;\n  return (\n    (dx === 0 && dy === -1) ||\n    (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n    (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n    checkPawnCaptures(toX, toY, from, pieces)\n  );\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/ai.js\n **/"],"sourceRoot":""}