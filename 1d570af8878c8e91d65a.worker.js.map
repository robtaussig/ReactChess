{"version":3,"sources":["webpack:///webpack/bootstrap 1d570af8878c8e91d65a","webpack:///./logic/move_worker.js","webpack:///./logic/logic_bridge.js","webpack:///./logic/ai_new.js","webpack:///./logic/board_node.js","webpack:///./logic/ai.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","BoardNode","module","exports","ai","moves","allLegalMoves","findAllPieces","convertBoard","boardString","i","n","length","j","m","piece","type","split","toUpperCase","pos","test","color","positions","push","concat","findAllLegalMovesByPiece","filter","inCheck","newBoard","makeMove","kingPos","findPiece","hasAttackers","position","bishopsQueensCheck","currentPos","checkObstruction","toLowerCase","inBounds","rooksQueensCheck","knightChecks","pawnChecks","kingChecks","allMoves","pawnMoves","rookMoves","knightMoves","bishopMoves","kingMoves","queenMoves","legalDirs","captureDirs","capturePos","canTake","Math","abs","checkCastle","from","to","floor","min","max","queenSideCastle","emptyBetween","kingSideCastle","PIECE_VALUES","side","currentSide","score","evaluateMove","testMove","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","parseMoveClusters","map","attackedPieces","forEach","lvA","leastValuableAttacker","defended","sorted","sort","a","b","secondBestAttack","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","findAttackers","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","pawn","posX","posY","rook","knight","bishop","queen","king","left","right","yDir","testSquare","xCoord","converted","legalMoves","returnPieces","row","square","parseSquare","allSquares","canMove","array","result","subArray","y","x","pieceInfo","toX","toY","notInCheck","checkMove","selected","dx","dy","checkPawnCaptures","oppColor","dX","dY","status","afterMove","findKing","colorToCheck","sameSide","returnResult","coord","step","start","duped","target","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant"],"mappings":"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","file":"1d570af8878c8e91d65a.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d570af8878c8e91d65a","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/move_worker.js","// const Ai = require('./ai.js');\nimport Ai from './ai_new.js';\n\nconst BoardNode = require('./board_node.js');\n\nmodule.exports = {\n\n  findBestMove (board, specMoves, depth) {\n    let ai = new Ai(board, specMoves);\n    let moves = ai.allLegalMoves(\n      ai.findAllPieces\n    );\n  }\n\n  // findBestMove (board,specMoves,depth) {\n  //   let moves = Ai.parseMoveClusters(\n  //                 Ai.findAllPieces(board,specMoves.currentSide)\n  //                 .map(piece=> Ai.findAllLegalMovesByPiece(piece,board,specMoves))\n  //               );\n  //   if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n  //\n  //   let bestMove = null;\n  //   moves.forEach(move => {\n  //     let currentNode = new BoardNode(move,board,specMoves,depth);\n  //     if (currentNode.checkmate) {\n  //       return {move: currentNode.move, checkmate: true};\n  //     }\n  //     bestMove = bestMove ?\n  //       (currentNode.score > bestMove.score ?\n  //         currentNode : bestMove) : currentNode;\n  //   });\n  //   return {move: bestMove.move};\n  // }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/logic_bridge.js","export default class Ai {\n  constructor (board,specialMoves) {\n    this.specialMoves = specialMoves;\n    this.board = this.convertBoard(board);\n  }\n\n  //RNBQKBNRPPPPPPPP----------------\n  //----------------pppppppprnbqkbnr\n  convertBoard (board) {\n    let boardString = '----------';\n    for (let i = 0, n = board.length; i < n; i++) {\n      boardString += '-';\n      for (let j = 0, m = board[i].length; j < m; j++) {\n        let piece = board[i][j][0];\n        let type = piece.split('-')[1];\n        if (type === 'l') {\n          boardString += '-';\n        } else if (piece.split('-')[0] === 'b') {\n          boardString += type.toUpperCase();\n        } else {\n          boardString += type;\n        }\n      }\n      boardString += '-';\n    }\n    boardString += '----------';\n    return boardString;\n  }\n\n  color (pos,board = this.board) {\n    if (/[a-z]/.test(board[pos])) {\n      return 'w';\n    } else {\n      return 'b';\n    }\n  }\n\n  findAllPieces (color, board = this.board) {\n    let positions = [];\n    for (let i = 0, n = board.length; i < n; i++) {\n      let piece = board[i];\n      if (piece !== '-' && this.color(i) === color) {\n        positions.push(i);\n      }\n    }\n    return positions;\n  }\n\n  allLegalMoves (positions, board = this.board) {\n    let moves = [];\n    for (let i = 0; i < positions.length; i++) {\n      moves = moves.concat(this.findAllLegalMovesByPiece(positions[i],board));\n    }\n    return moves.filter(move => !this.inCheck(move,board));\n  }\n\n  inCheck (move, board = this.board, color = 'b') {\n    let newBoard = this.makeMove(move, board);\n    let kingPos = this.findPiece('k', color, board)[0];\n    return this.hasAttackers(kingPos, newBoard, color);\n  }\n\n  findPiece (piece, color, board = this.board) {\n    if (color === 'b') piece = piece.toUpperCase();\n    let pos = [];\n    for (let i = 0; i < 100; i++) {\n      if (board[i] === piece) {\n        if (piece === 'K' || piece === 'k' ||\n          piece === 'Q' || piece === 'q') {\n            return [i];\n          }\n        pos.push(i);\n      }\n    }\n    return pos;\n  }\n\n  hasAttackers (position, board = this.board, color = 'b') {\n    let bishopsQueensCheck = [-11,-9,11,9];\n    for (let i = 0; i < bishopsQueensCheck.length; i++) {\n      let currentPos = position + bishopsQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += bishopsQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'b' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let rooksQueensCheck = [-1,1,-10,10];\n    for (let i = 0; i < rooksQueensCheck.length; i++) {\n      let currentPos = position + rooksQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += rooksQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'r' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let knightChecks = [-12,-21,-19,-8,12,21,19,8];\n    for (let i = 0; i < knightChecks.length; i++) {\n      let currentPos = position + knightChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'n' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let pawnChecks = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < pawnChecks.length; i++) {\n      let currentPos = position + pawnChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'p' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let kingChecks = [-1,-11,-10,-9,1,11,10,9];\n    for (let i = 0; i < kingChecks.length; i++) {\n      let currentPos = position + kingChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'k' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  makeMove (move, board = this.board) {\n    let newBoard = \"\";\n    for (let i = 0; i < 100; i++) {\n      if (i === move[0]) {\n        newBoard += '-';\n      } else if (i === move[1]) {\n        newBoard += board[move[0]];\n      } else {\n        newBoard += board[i];\n      }\n    }\n    return newBoard;\n  }\n\n  findAllLegalMovesByPiece (position, board = this.board) {\n    let allMoves;\n    switch (board[position].toLowerCase()) {\n      case 'p':\n        allMoves = this.pawnMoves(position, board);\n        break;\n      case 'r':\n        allMoves = this.rookMoves(position, board);\n        break;\n      case 'n':\n        allMoves = this.knightMoves(position, board);\n        break;\n      case 'b':\n        allMoves = this.bishopMoves(position, board);\n        break;\n      case 'k':\n        allMoves = this.kingMoves(position, board);\n        break;\n      case 'q':\n        allMoves = this.queenMoves(position, board);\n        break;\n      default:\n        allMoves = [];\n    }\n    return allMoves;\n  }\n\n  inBounds (pos) {\n    return (pos > 9 && pos < 90 && pos % 10 !== 0 && pos % 10 !== 9);\n  }\n\n  checkObstruction (pos, board = this.board) {\n    return board[pos] === '-' && this.inBounds(pos);\n  }\n\n  canTake (color, pos, board = this.board) {\n    return this.inBounds(pos) && this.color(pos) !== color && board[pos] !== '-';\n  }\n\n  pawnMoves (position, board = this.board) {\n    let allMoves = [];\n    let color = this.color(position,board);\n    let legalDirs = [\n      10 * (color === 'w' ? - 1 : 1)\n    ];\n    if ((color === 'w' && position > 70) || (color === 'b' && position < 30)) {\n      legalDirs.push(20 * (color === 'w' ? - 1 : 1));\n    }\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n\n    let captureDirs = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < captureDirs.length; i++) {\n      let capturePos = position + captureDirs[i];\n      if (this.inBounds(capturePos) && this.canTake(color, capturePos)) {\n        allMoves.push([position,capturePos]);\n      }\n    }\n    // Remember to test again for en passant\n    if (this.specialMoves.enPassant &&\n      Math.abs(this.specialMoves - position) === 1) {\n        allMoves.push([position,this.specialMoves.enPassant +\n          (10 * color === 'w' ? -1 : 1)]);\n    }\n    return allMoves;\n  }\n\n  rookMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  knightMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-12,-21,-19,-8,12,21,19,8];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  bishopMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  kingMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,-11,-10,-9,1,11,10,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    allMoves = allMoves.concat(this.checkCastle(board, position));\n    return allMoves;\n  }\n\n  emptyBetween (board,from, to) {\n    // Check horizontal line\n    if (Math.floor(from / 10) === Math.floor(to / 10)) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\n        if (board[i] !== '-') return false;\n      }\n      // Check vertical line\n    } else if (from % 10 === to % 10) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i += 10) {\n        if (board[i] !== '-') return false;\n      }\n    } else {\n      // Check diagonal\n      if (Math.abs(from - to) % 11 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 11) {\n          if (board[i] !== '-') return false;\n        }\n      } else if (Math.abs(from - to) % 9 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 9) {\n          if (board[i] !== '-') return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  checkCastle (board, position) {\n    let moves = [];\n    let color = this.board[position] === 15 ? 'b' : 'w';\n    if (this.specialMoves.queenSideCastle) {\n      if (this.emptyBetween(board, position - 1, 12) && color === 'b') {\n        moves.push([position,13]);\n      } else if (this.emptyBetween(board, position - 1, 82)){\n        moves.push([position, 83]);\n      }\n    }\n\n    if (this.specialMoves.kingSideCastle) {\n      if (this.emptyBetween(board, position + 1, 17) && color === 'b') {\n        moves.push([position,17]);\n      } else if (this.emptyBetween(board, position + 1, 87)){\n        moves.push([position, 87]);\n      }\n    }\n    return moves;\n  }\n\n  queenMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10,-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai_new.js","const Ai = require('./ai.js');\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = Ai.testMove(Ai.dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = Ai.findAllPieces(newBoard,this.side);\n    let otherPieces = Ai.findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> Ai.findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = Ai.findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = Ai.findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = Ai.findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if (king.pos[0] === 6) {\n      value += 200;\n    }\n    return value;\n  }\n}\n\nmodule.exports = BoardNode;\n\n\n\n// WEBPACK FOOTER //\n// ./logic/board_node.js","import Ai from './ai_new.js';\n\nmodule.exports = {\n  specialMoves: {},\n\n  findAllPieces (board,color) {\n    let converted = new Ai(board,this.specialMoves);\n    let legalMoves = converted.allLegalMoves(\n      converted.findAllPieces('b')\n    );\n    let returnPieces = [];\n    board.forEach((row,i)=>{\n      row.forEach((square,j)=>{\n        let testSquare = this.parseSquare(board,i,j);\n        if (testSquare.side === color) {\n          returnPieces.push(testSquare);\n        }\n      });\n    });\n    return returnPieces;\n  },\n\n  findAllLegalMovesByPiece (piece, board, specMoves) {\n    let allSquares = [];\n    let allMoves;\n    for (let i=0;i<8;i++) {\n      for (let j=0;j<8;j++) {\n        allSquares.push([j,i]);\n      }\n    }\n    if (piece.type === 'r') {\n      allMoves = allSquares.filter(square=> {\n        return this.rookMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'n') {\n      allMoves = allSquares.filter(square=> {\n        return this.knightMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'b') {\n      allMoves = allSquares.filter(square=> {\n        return this.bishopMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'q') {\n      allMoves = allSquares.filter(square=> {\n        return this.queenMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'p') {\n      allMoves = allSquares.filter(square=> {\n        return this.pawnMoves(square[0], square[1], piece.pos, board);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'k') {\n      allMoves = allSquares.filter(square=> {\n        return this.kingMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n    return allMoves;\n  },\n\n  parseMoveClusters (array) {\n    let result = [];\n    array.forEach(subArray => {\n      subArray.forEach(move => {\n        result.push(move);\n      });\n    });\n    return result;\n  },\n\n  parseSquare (pieces, y, x) {\n    let pieceInfo = {\n      side: pieces[y][x][0][0],\n      type: pieces[y][x][0][2],\n      pos: [x,y],\n      defended: false\n    };\n    return pieceInfo;\n  },\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    this.specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (this.notInCheck(toX, toY, from, pieces)) {\n      if (this.checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return ((Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0)) ||\n           (x === 4 && y === 0 && ((toX === 6) || (toX === 2)));\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = this.specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = this.dupe(pieces);\n    let afterMove = this.testMove(testBoard, from, [toX, toY]);\n    let king = this.findKing(afterMove,color); //[y,x];\n    if (this.findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return this.knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        if (this.checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return this.kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (this.checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (this.checkPawnObstruction(toX, toY, pieces)) {\n        return this.pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    if (pos[0] !== 4) return false;\n\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (this.findAttackers(king,pieces,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    }\n    if (toX === 2 && toY === pos[1] && this.checkObstruction(toX - 1, toY, pos, pieces) &&\n        this.notInCheck(toX + 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && this.checkObstruction(toX, toY, pos, pieces) &&\n        this.notInCheck(toX - 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    this.specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      this.checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai.js"],"sourceRoot":""}