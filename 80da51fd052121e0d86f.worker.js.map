{"version":3,"sources":["webpack:///webpack/bootstrap 80da51fd052121e0d86f","webpack:///./logic/move_worker.js","webpack:///./logic/board_node.js"],"names":["BoardNode","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","color","returnPieces","row","i","square","j","testSquare","parseSquare","push","allSquares","allMoves","type","filter","rookMoves","pos","canMove","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","defended","PIECE_VALUES","evaluateMove","newBoard","testMove","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","sorted","sort","a","b","secondBestAttack","Math","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","findAttackers","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","pawn","posX","posY","abs","rook","knight","bishop","queen","king","left","right","yDir","xCoord"],"mappings":"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","file":"80da51fd052121e0d86f.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 80da51fd052121e0d86f\n **/","const BoardNode = require('./board_node.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = BoardNode.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/move_worker.js\n **/","const Ai = require('./ai.js');\n\nfunction findBestMove (board,specMoves,depth) {\n  let moves = parseMoveClusters(\n                findAllPieces(board,specMoves.currentSide)\n                .map(piece=> findAllLegalMovesByPiece(piece,board,specMoves))\n              );\n  if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n  let bestMove = null;\n  moves.forEach(move => {\n    let currentNode = new BoardNode(move,board,specMoves,depth);\n    if (currentNode.checkmate) {\n      return {move: currentNode.move, checkmate: true};\n    }\n    bestMove = bestMove ?\n      (currentNode.score > bestMove.score ?\n        currentNode : bestMove) : currentNode;\n  });\n  return {move: bestMove.move};\n}\n\nfunction findAllPieces (board,color) {\n  let returnPieces = [];\n  board.forEach((row,i)=>{\n    row.forEach((square,j)=>{\n      let testSquare = parseSquare(board,i,j);\n      if (testSquare.side === color) {\n        returnPieces.push(testSquare);\n      }\n    });\n  });\n  return returnPieces;\n}\n\nfunction findAllLegalMovesByPiece (piece, board, specMoves) {\n  let allSquares = [];\n  let allMoves;\n  for (let i=0;i<8;i++) {\n    for (let j=0;j<8;j++) {\n      allSquares.push([j,i]);\n    }\n  }\n  if (piece.type === 'r') {\n    allMoves = allSquares.filter(square=> {\n      return rookMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'n') {\n    allMoves = allSquares.filter(square=> {\n      return knightMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'b') {\n    allMoves = allSquares.filter(square=> {\n      return bishopMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'q') {\n    allMoves = allSquares.filter(square=> {\n      return queenMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'p') {\n    allMoves = allSquares.filter(square=> {\n      return pawnMoves(square[0], square[1], piece.pos, board);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'k') {\n    allMoves = allSquares.filter(square=> {\n      return kingMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n  return allMoves;\n}\n\nfunction parseMoveClusters (array) {\n  let result = [];\n  array.forEach(subArray => {\n    subArray.forEach(move => {\n      result.push(move);\n    });\n  });\n  return result;\n}\n\nfunction parseSquare (pieces, y, x) {\n  let pieceInfo = {\n    side: pieces[y][x][0][0],\n    type: pieces[y][x][0][2],\n    pos: [x,y],\n    defended: false\n  };\n  return pieceInfo;\n}\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = testMove(dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = findAllPieces(newBoard,this.side);\n    let otherPieces = findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = parseMoveClusters(\n                  findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if ((king.pos[0] === 6) || (king.pos[0] === 2)) {\n      value += 100;\n    }\n    return value;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/board_node.js\n **/"],"sourceRoot":""}