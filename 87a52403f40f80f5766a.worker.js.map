{"version":3,"sources":["webpack:///webpack/bootstrap 87a52403f40f80f5766a","webpack:///./logic/move_worker.js","webpack:///./logic/ai.js","webpack:///./logic/ai_new.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","module","exports","findAllPieces","color","converted","legalMoves","allLegalMoves","returnPieces","forEach","row","i","square","j","testSquare","parseSquare","side","push","findAllLegalMovesByPiece","piece","allSquares","allMoves","type","filter","rookMoves","pos","canMove","map","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","parseMoveClusters","array","result","subArray","y","x","pieceInfo","defended","toX","toY","from","notInCheck","checkMove","selected","dx","dy","Math","abs","checkPawnCaptures","pawn","oppColor","dX","dY","status","afterMove","testMove","king","findKing","findAttackers","length","colorToCheck","sameSide","yDir","left","right","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant","convertBoard","boardString","n","m","split","toUpperCase","test","positions","moves","concat","inCheck","newBoard","makeMove","kingPos","findPiece","hasAttackers","position","bishopsQueensCheck","currentPos","toLowerCase","inBounds","rooksQueensCheck","knightChecks","pawnChecks","kingChecks","legalDirs","captureDirs","capturePos","canTake","floor","min","max","queenSideCastle","emptyBetween","kingSideCastle"],"mappings":"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","file":"87a52403f40f80f5766a.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 87a52403f40f80f5766a","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/move_worker.js","import Ai from './ai_new.js';\n\nmodule.exports = {\n  specialMoves: {},\n\n  findAllPieces (board,color) {\n    let converted = new Ai(board,this.specialMoves);\n    let legalMoves = converted.allLegalMoves(\n      converted.findAllPieces('b')\n    );\n    let returnPieces = [];\n    board.forEach((row,i)=>{\n      row.forEach((square,j)=>{\n        let testSquare = this.parseSquare(board,i,j);\n        if (testSquare.side === color) {\n          returnPieces.push(testSquare);\n        }\n      });\n    });\n    return returnPieces;\n  },\n\n  findAllLegalMovesByPiece (piece, board, specMoves) {\n    let allSquares = [];\n    let allMoves;\n    for (let i=0;i<8;i++) {\n      for (let j=0;j<8;j++) {\n        allSquares.push([j,i]);\n      }\n    }\n    if (piece.type === 'r') {\n      allMoves = allSquares.filter(square=> {\n        return this.rookMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'n') {\n      allMoves = allSquares.filter(square=> {\n        return this.knightMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'b') {\n      allMoves = allSquares.filter(square=> {\n        return this.bishopMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'q') {\n      allMoves = allSquares.filter(square=> {\n        return this.queenMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'p') {\n      allMoves = allSquares.filter(square=> {\n        return this.pawnMoves(square[0], square[1], piece.pos, board);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'k') {\n      allMoves = allSquares.filter(square=> {\n        return this.kingMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n    return allMoves;\n  },\n\n  parseMoveClusters (array) {\n    let result = [];\n    array.forEach(subArray => {\n      subArray.forEach(move => {\n        result.push(move);\n      });\n    });\n    return result;\n  },\n\n  parseSquare (pieces, y, x) {\n    let pieceInfo = {\n      side: pieces[y][x][0][0],\n      type: pieces[y][x][0][2],\n      pos: [x,y],\n      defended: false\n    };\n    return pieceInfo;\n  },\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    this.specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (this.notInCheck(toX, toY, from, pieces)) {\n      if (this.checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return ((Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0)) ||\n           (x === 4 && y === 0 && ((toX === 6) || (toX === 2)));\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = this.specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = this.dupe(pieces);\n    let afterMove = this.testMove(testBoard, from, [toX, toY]);\n    let king = this.findKing(afterMove,color); //[y,x];\n    if (this.findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return this.knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        if (this.checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return this.kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (this.checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (this.checkPawnObstruction(toX, toY, pieces)) {\n        return this.pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    if (pos[0] !== 4) return false;\n\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (this.findAttackers(king,pieces,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    }\n    if (toX === 2 && toY === pos[1] && this.checkObstruction(toX - 1, toY, pos, pieces) &&\n        this.notInCheck(toX + 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && this.checkObstruction(toX, toY, pos, pieces) &&\n        this.notInCheck(toX - 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    this.specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      this.checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai.js","export default class Ai {\n  constructor (board,specialMoves) {\n    this.specialMoves = specialMoves;\n    this.board = this.convertBoard(board);\n  }\n\n  //RNBQKBNRPPPPPPPP----------------\n  //----------------pppppppprnbqkbnr\n  convertBoard (board) {\n    let boardString = '----------';\n    for (let i = 0, n = board.length; i < n; i++) {\n      boardString += '-';\n      for (let j = 0, m = board[i].length; j < m; j++) {\n        let piece = board[i][j][0];\n        let type = piece.split('-')[1];\n        if (type === 'l') {\n          boardString += '-';\n        } else if (piece.split('-')[0] === 'b') {\n          boardString += type.toUpperCase();\n        } else {\n          boardString += type;\n        }\n      }\n      boardString += '-';\n    }\n    boardString += '----------';\n    return boardString;\n  }\n\n  color (pos,board = this.board) {\n    if (/[a-z]/.test(board[pos])) {\n      return 'w';\n    } else {\n      return 'b';\n    }\n  }\n\n  findAllPieces (color, board = this.board) {\n    let positions = [];\n    for (let i = 0, n = board.length; i < n; i++) {\n      let piece = board[i];\n      if (piece !== '-' && this.color(i) === color) {\n        positions.push(i);\n      }\n    }\n    return positions;\n  }\n\n  allLegalMoves (positions, board = this.board) {\n    let moves = [];\n    for (let i = 0; i < positions.length; i++) {\n      moves = moves.concat(this.findAllLegalMovesByPiece(positions[i],board));\n    }\n    return moves.filter(move => !this.inCheck(move,board));\n  }\n\n  inCheck (move, board = this.board, color = 'b') {\n    let newBoard = this.makeMove(move, board);\n    let kingPos = this.findPiece('k', color, board)[0];\n    return this.hasAttackers(kingPos, newBoard, color);\n  }\n\n  findPiece (piece, color, board = this.board) {\n    if (color === 'b') piece = piece.toUpperCase();\n    let pos = [];\n    for (let i = 0; i < 100; i++) {\n      if (board[i] === piece) {\n        if (piece === 'K' || piece === 'k' ||\n          piece === 'Q' || piece === 'q') {\n            return [i];\n          }\n        pos.push(i);\n      }\n    }\n    return pos;\n  }\n\n  hasAttackers (position, board = this.board, color = 'b') {\n    let bishopsQueensCheck = [-11,-9,11,9];\n    for (let i = 0; i < bishopsQueensCheck.length; i++) {\n      let currentPos = position + bishopsQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += bishopsQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'b' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let rooksQueensCheck = [-1,1,-10,10];\n    for (let i = 0; i < rooksQueensCheck.length; i++) {\n      let currentPos = position + rooksQueensCheck[i];\n      while (this.checkObstruction(currentPos, board)) {\n        currentPos += rooksQueensCheck[i];\n      }\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && (piece === 'r' || piece === 'q') &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let knightChecks = [-12,-21,-19,-8,12,21,19,8];\n    for (let i = 0; i < knightChecks.length; i++) {\n      let currentPos = position + knightChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'n' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let pawnChecks = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < pawnChecks.length; i++) {\n      let currentPos = position + pawnChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'p' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    let kingChecks = [-1,-11,-10,-9,1,11,10,9];\n    for (let i = 0; i < kingChecks.length; i++) {\n      let currentPos = position + kingChecks[i];\n      let piece = board[currentPos] ? board[currentPos].toLowerCase() : '-';\n      if (this.inBounds(currentPos) && piece === 'k' &&\n        this.color(currentPos,board) !== color) {\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  makeMove (move, board = this.board) {\n    let newBoard = \"\";\n    for (let i = 0; i < 100; i++) {\n      if (i === move[0]) {\n        newBoard += '-';\n      } else if (i === move[1]) {\n        newBoard += board[move[0]];\n      } else {\n        newBoard += board[i];\n      }\n    }\n    return newBoard;\n  }\n\n  findAllLegalMovesByPiece (position, board = this.board) {\n    let allMoves;\n    switch (board[position].toLowerCase()) {\n      case 'p':\n        allMoves = this.pawnMoves(position, board);\n        break;\n      case 'r':\n        allMoves = this.rookMoves(position, board);\n        break;\n      case 'n':\n        allMoves = this.knightMoves(position, board);\n        break;\n      case 'b':\n        allMoves = this.bishopMoves(position, board);\n        break;\n      case 'k':\n        allMoves = this.kingMoves(position, board);\n        break;\n      case 'q':\n        allMoves = this.queenMoves(position, board);\n        break;\n      default:\n        allMoves = [];\n    }\n    return allMoves;\n  }\n\n  inBounds (pos) {\n    return (pos > 9 && pos < 90 && pos % 10 !== 0 && pos % 10 !== 9);\n  }\n\n  checkObstruction (pos, board = this.board) {\n    return board[pos] === '-' && this.inBounds(pos);\n  }\n\n  canTake (color, pos, board = this.board) {\n    return this.inBounds(pos) && this.color(pos) !== color && board[pos] !== '-';\n  }\n\n  pawnMoves (position, board = this.board) {\n    let allMoves = [];\n    let color = this.color(position,board);\n    let legalDirs = [\n      10 * (color === 'w' ? - 1 : 1)\n    ];\n    if ((color === 'w' && position > 70) || (color === 'b' && position < 30)) {\n      legalDirs.push(20 * (color === 'w' ? - 1 : 1));\n    }\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n\n    let captureDirs = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < captureDirs.length; i++) {\n      let capturePos = position + captureDirs[i];\n      if (this.inBounds(capturePos) && this.canTake(color, capturePos)) {\n        allMoves.push([position,capturePos]);\n      }\n    }\n    // Remember to test again for en passant\n    if (this.specialMoves.enPassant &&\n      Math.abs(this.specialMoves - position) === 1) {\n        allMoves.push([position,this.specialMoves.enPassant +\n          (10 * color === 'w' ? -1 : 1)]);\n    }\n    return allMoves;\n  }\n\n  rookMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  knightMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-12,-21,-19,-8,12,21,19,8];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  bishopMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n  kingMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,-11,-10,-9,1,11,10,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push([position,currentPos]);\n      }\n    }\n    allMoves = allMoves.concat(this.checkCastle(board, position));\n    return allMoves;\n  }\n\n  emptyBetween (board,from, to) {\n    // Check horizontal line\n    if (Math.floor(from / 10) === Math.floor(to / 10)) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\n        if (board[i] !== '-') return false;\n      }\n      // Check vertical line\n    } else if (from % 10 === to % 10) {\n      for (let i = Math.min(from, to); i <= Math.max(from, to); i += 10) {\n        if (board[i] !== '-') return false;\n      }\n    } else {\n      // Check diagonal\n      if (Math.abs(from - to) % 11 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 11) {\n          if (board[i] !== '-') return false;\n        }\n      } else if (Math.abs(from - to) % 9 === 0) {\n        for (let i = Math.min(from, to); i <= Math.max(from, to); i += 9) {\n          if (board[i] !== '-') return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  checkCastle (board, position) {\n    let moves = [];\n    let color = this.board[position] === 15 ? 'b' : 'w';\n    if (this.specialMoves.queenSideCastle) {\n      if (this.emptyBetween(board, position - 1, 12) && color === 'b') {\n        moves.push([position,13]);\n      } else if (this.emptyBetween(board, position - 1, 82)){\n        moves.push([position, 83]);\n      }\n    }\n\n    if (this.specialMoves.kingSideCastle) {\n      if (this.emptyBetween(board, position + 1, 17) && color === 'b') {\n        moves.push([position,17]);\n      } else if (this.emptyBetween(board, position + 1, 87)){\n        moves.push([position, 87]);\n      }\n    }\n    return moves;\n  }\n\n  queenMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10,-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push([position,currentPos]);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push([position,currentPos]);\n      }\n    }\n    return allMoves;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai_new.js"],"sourceRoot":""}