{"version":3,"sources":["webpack:///webpack/bootstrap ca93bc6a6faef13fb7cb","webpack:///./logic/move_worker.js","webpack:///./logic/logic_bridge.js","webpack:///./logic/ai.js","webpack:///./logic/board_node.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","BoardNode","module","exports","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","canMove","toX","toY","from","notInCheck","checkMove","bishopMoves","selected","x","y","dx","dy","Math","abs","rookMoves","queenMoves","knightMoves","kingMoves","checkPawnCaptures","pawn","color","oppColor","dX","dY","status","pos","afterMove","testMove","king","findKing","findAttackers","colorToCheck","sameSide","yDir","left","right","returnResult","push","coord","step","checkObstruction","to","start","array","duped","i","j","target","checkCastle","checkPawnObstruction","pawnMoves","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant","PIECE_VALUES","evaluateMove","newBoard","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","defended","type","sorted","sort","a","b","secondBestAttack","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","posX","posY","rook","knight","bishop","queen","filter","testSquare","xCoord"],"mappings":"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","file":"ca93bc6a6faef13fb7cb.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ca93bc6a6faef13fb7cb\n **/","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/move_worker.js\n **/","const Ai = require('./ai.js');\nconst BoardNode = require('./board_node.js');\n\nmodule.exports = {\n  findBestMove (board,specMoves,depth) {\n    let moves = this.parseMoveClusters(\n                  this.findAllPieces(board,specMoves.currentSide)\n                  .map(piece=> this.findAllLegalMovesByPiece(piece,board,specMoves))\n                );\n    if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n    let bestMove = null;\n    moves.forEach(move => {\n      let currentNode = new BoardNode(move,board,specMoves,depth);\n      if (currentNode.checkmate) {\n        return {move: currentNode.move, checkmate: true};\n      }\n      bestMove = bestMove ?\n        (currentNode.score > bestMove.score ?\n          currentNode : bestMove) : currentNode;\n    });\n    return {move: bestMove.move};\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/logic_bridge.js\n **/","module.exports = {\n  specialMoves: {},\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (notInCheck(toX, toY, from, pieces)) {\n      if (checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0);\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = dupe(pieces);\n    let afterMove = testMove(testBoard, from, [toX, toY]);\n    let king = findKing(afterMove,color); //[y,x];\n    if (findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        if (checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (checkPawnObstruction(toX, toY, pieces)) {\n        return pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (toX === 2 && toY === pos[1] && checkObstruction(toX - 1, toY, pos, pieces) &&\n        notInCheck(toX + 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && checkObstruction(toX, toY, pos, pieces) &&\n        notInCheck(toX - 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/ai.js\n **/","const Ai = require('./ai.js');\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = Ai.testMove(dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = findAllPieces(newBoard,this.side);\n    let otherPieces = findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = parseMoveClusters(\n                  findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if ((king.pos[0] === 6) || (king.pos[0] === 2)) {\n      value += 100;\n    }\n    return value;\n  }\n}\n\nmodule.exports = BoardNode;\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/board_node.js\n **/"],"sourceRoot":""}