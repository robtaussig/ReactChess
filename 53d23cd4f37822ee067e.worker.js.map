{"version":3,"sources":["webpack:///webpack/bootstrap 53d23cd4f37822ee067e","webpack:///./logic/move_worker.js","webpack:///./logic/logic_bridge.js","webpack:///./logic/ai.js","webpack:///./logic/ai_new.js","webpack:///./logic/board_node.js"],"names":["LogicBridge","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","BoardNode","module","exports","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","color","converted","console","log","bishopMoves","returnPieces","row","i","square","j","testSquare","parseSquare","push","allSquares","allMoves","type","filter","rookMoves","pos","canMove","knightMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","defended","toX","toY","from","notInCheck","checkMove","selected","dx","dy","Math","abs","checkPawnCaptures","pawn","oppColor","dX","dY","status","afterMove","testMove","king","findKing","findAttackers","colorToCheck","sameSide","yDir","left","right","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant","convertBoard","boardString","n","m","split","toUpperCase","test","positions","concat","position","toLowerCase","inBounds","legalDirs","currentPos","captureDirs","canTake","PIECE_VALUES","evaluateMove","newBoard","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","sorted","sort","a","b","secondBestAttack","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","posX","posY","rook","knight","bishop","queen","xCoord"],"mappings":"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","file":"53d23cd4f37822ee067e.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 53d23cd4f37822ee067e","const LogicBridge = require('./logic_bridge.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = LogicBridge.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/move_worker.js","const Ai = require('./ai.js');\nconst BoardNode = require('./board_node.js');\n\nmodule.exports = {\n  findBestMove (board,specMoves,depth) {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(board,specMoves.currentSide)\n                  .map(piece=> Ai.findAllLegalMovesByPiece(piece,board,specMoves))\n                );\n    if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n    let bestMove = null;\n    moves.forEach(move => {\n      let currentNode = new BoardNode(move,board,specMoves,depth);\n      if (currentNode.checkmate) {\n        return {move: currentNode.move, checkmate: true};\n      }\n      bestMove = bestMove ?\n        (currentNode.score > bestMove.score ?\n          currentNode : bestMove) : currentNode;\n    });\n    return {move: bestMove.move};\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/logic_bridge.js","import Ai from './ai_new.js';\n\nmodule.exports = {\n  specialMoves: {},\n\n  findAllPieces (board,color) {\n    let converted = new Ai(board);\n    console.log(converted.bishopMoves(44));\n    let returnPieces = [];\n    board.forEach((row,i)=>{\n      row.forEach((square,j)=>{\n        let testSquare = this.parseSquare(board,i,j);\n        if (testSquare.side === color) {\n          returnPieces.push(testSquare);\n        }\n      });\n    });\n    return returnPieces;\n  },\n\n  findAllLegalMovesByPiece (piece, board, specMoves) {\n    let allSquares = [];\n    let allMoves;\n    for (let i=0;i<8;i++) {\n      for (let j=0;j<8;j++) {\n        allSquares.push([j,i]);\n      }\n    }\n    if (piece.type === 'r') {\n      allMoves = allSquares.filter(square=> {\n        return this.rookMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'n') {\n      allMoves = allSquares.filter(square=> {\n        return this.knightMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'b') {\n      allMoves = allSquares.filter(square=> {\n        return this.bishopMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'q') {\n      allMoves = allSquares.filter(square=> {\n        return this.queenMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'p') {\n      allMoves = allSquares.filter(square=> {\n        return this.pawnMoves(square[0], square[1], piece.pos, board);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n\n    if (piece.type === 'k') {\n      allMoves = allSquares.filter(square=> {\n        return this.kingMoves(piece.pos, square[0], square[1]);\n      }).filter(square=> {\n        return this.canMove(square[0], square[1], board, piece.pos,specMoves);\n      }).map(move => [piece.pos,move]);\n    }\n    return allMoves;\n  },\n\n  parseMoveClusters (array) {\n    let result = [];\n    array.forEach(subArray => {\n      subArray.forEach(move => {\n        result.push(move);\n      });\n    });\n    return result;\n  },\n\n  parseSquare (pieces, y, x) {\n    let pieceInfo = {\n      side: pieces[y][x][0][0],\n      type: pieces[y][x][0][2],\n      pos: [x,y],\n      defended: false\n    };\n    return pieceInfo;\n  },\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    this.specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (this.notInCheck(toX, toY, from, pieces)) {\n      if (this.checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return ((Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0)) ||\n           (x === 4 && y === 0 && ((toX === 6) || (toX === 2)));\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = this.specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = this.dupe(pieces);\n    let afterMove = this.testMove(testBoard, from, [toX, toY]);\n    let king = this.findKing(afterMove,color); //[y,x];\n    if (this.findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          this.checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return this.knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        return this.queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (this.checkObstruction(toX, toY, pos, pieces)) {\n        if (this.checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return this.kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (this.checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (this.checkPawnObstruction(toX, toY, pieces)) {\n        return this.pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    if (pos[0] !== 4) return false;\n\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (this.findAttackers(king,pieces,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    }\n    if (toX === 2 && toY === pos[1] && this.checkObstruction(toX - 1, toY, pos, pieces) &&\n        this.notInCheck(toX + 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && this.checkObstruction(toX, toY, pos, pieces) &&\n        this.notInCheck(toX - 1, toY, pos, pieces) &&\n        this.findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return this.specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    this.specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      this.specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      this.checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai.js","export default class Ai {\n  constructor (board) {\n    this.specialMoves = {};\n    this.board = this.convertBoard(board);\n  }\n\n  //RNBQKBNRPPPPPPPP----------------\n  //----------------pppppppprnbqkbnr\n  convertBoard (board) {\n    let boardString = '----------';\n    for (let i = 0, n = board.length; i < n; i++) {\n      boardString += '-';\n      for (let j = 0, m = board[i].length; j < m; j++) {\n        let piece = board[i][j][0];\n        let type = piece.split('-')[1];\n        if (type === 'l') {\n          boardString += '-';\n        } else if (piece.split('-')[0] === 'b') {\n          boardString += type.toUpperCase();\n        } else {\n          boardString += type;\n        }\n      }\n      boardString += '-';\n    }\n    boardString += '----------';\n    return boardString;\n  }\n\n  color (pos,board = this.board) {\n    if (/[a-z]/.test(board[pos])) {\n      return 'w';\n    } else {\n      return 'b';\n    }\n  }\n\n  findAllPieces (color, board = this.board) {\n    let positions = [];\n    for (let i = 0, n = board.length; i < n; i++) {\n      let piece = board[i];\n      if (piece !== '-' && this.color(i) === color) {\n        positions.push(i);\n      }\n    }\n    return positions;\n  }\n\n  allLegalMoves (positions, board = this.board) {\n    let moves = [];\n    for (let i = 0; i < positions.length; i++) {\n      moves.concat(this.findAllLegalMovesByPiece(positions[i],board));\n    }\n    return moves;\n  }\n\n  findAllLegalMovesByPiece (position, board = this.board) {\n    let allMoves;\n    switch (board[position].toLowerCase()) {\n      case 'p':\n        allMoves = this.pawnMoves(position, board);\n        break;\n      case 'r':\n        allMoves = this.rookMoves(position, board);\n        break;\n      case 'n':\n        allMoves = this.knightMoves(position, board);\n        break;\n      case 'b':\n        allMoves = this.bishopMoves(position, board);\n        break;\n      case 'k':\n        allMoves = this.kingMoves(position, board);\n        break;\n      case 'q':\n        allMoves = this.queenMoves(position, board);\n        break;\n      default:\n        allMoves = [];\n    }\n    return allMoves;\n  }\n\n  inBounds (pos) {\n    return (pos > 9 && pos < 90 && pos % 10 !== 0 && pos % 10 !== 9);\n  }\n\n  checkObstruction (pos, board = this.board) {\n    return board[pos] === '-' && this.inBounds(pos);\n  }\n\n  canTake (color, pos) {\n    return this.color(pos) !== color;\n  }\n\n  pawnMoves (position, board = this.board) {\n    let allMoves = [];\n    let color = this.color(position,board);\n    let legalDirs = [\n      10 * (color === 'w' ? - 1 : 1),\n      20 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos)) {\n        allMoves.push(currentPos);\n      }\n    }\n    let captureDirs = [\n      11 * (color === 'w' ? - 1 : 1),\n      9 * (color === 'w' ? - 1 : 1)\n    ];\n    for (let i = 0; i < captureDirs; i++) {\n      if (this.inBounds(position + position) && this.canTake(color, currentPos)) {\n        allMoves.push(currentPos);\n      }\n    }\n  }\n\n  rookMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push(currentPos);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push(currentPos);\n      }\n    }\n    return allMoves;\n  }\n\n  knightMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-12,-21,-19,-8,12,21,19,8];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push(currentPos);\n      }\n    }\n    return allMoves;\n  }\n\n  bishopMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push(currentPos);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push(currentPos);\n      }\n    }\n    return allMoves;\n  }\n\n  kingMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,-11,-10,-9,1,11,10,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      if (this.checkObstruction(currentPos) ||\n        this.canTake(color, currentPos)) {\n          allMoves.push(currentPos);\n      }\n    }\n    return allMoves;\n  }\n\n  queenMoves (position, board = this.board) {\n    let allMoves = [];\n    let legalDirs = [-1,1,-10,10,-11,11,-9,9];\n    let color = this.color(position,board);\n    for (let i = 0; i < legalDirs.length; i++) {\n      let currentPos = position + legalDirs[i];\n      while (this.checkObstruction(currentPos)) {\n        allMoves.push(currentPos);\n        currentPos += legalDirs[i];\n      }\n      if (this.inBounds(currentPos) && this.canTake(color, currentPos)) {\n        allMoves.push(currentPos);\n      }\n    }\n    return allMoves;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./logic/ai_new.js","const Ai = require('./ai.js');\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = Ai.testMove(Ai.dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = Ai.findAllPieces(newBoard,this.side);\n    let otherPieces = Ai.findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = Ai.parseMoveClusters(\n                  Ai.findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> Ai.findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = Ai.findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = Ai.findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = Ai.findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = Ai.findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if (king.pos[0] === 6) {\n      value += 200;\n    }\n    return value;\n  }\n}\n\nmodule.exports = BoardNode;\n\n\n\n// WEBPACK FOOTER //\n// ./logic/board_node.js"],"sourceRoot":""}