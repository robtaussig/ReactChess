{"version":3,"sources":["webpack:///webpack/bootstrap 1a024b4f88c4e96e0e3d","webpack:///./logic/move_worker.js","webpack:///./logic/board_node.js","webpack:///./logic/ai.js"],"names":["BoardNode","require","Ai","self","onmessage","e","specMoves","data","specialMoves","testBoard","dupe","board","pieces","depth","bestMove","findBestMove","workerResult","moveData","Object","assign","move","checkmate","enPassant","castle","postMessage","moves","parseMoveClusters","findAllPieces","currentSide","map","findAllLegalMovesByPiece","piece","length","side","forEach","currentNode","score","color","returnPieces","row","i","square","j","testSquare","parseSquare","push","allSquares","allMoves","type","filter","rookMoves","pos","canMove","knightMoves","bishopMoves","queenMoves","pawnMoves","kingMoves","array","result","subArray","y","x","pieceInfo","defended","PIECE_VALUES","evaluateMove","newBoard","testMove","ownPieces","otherPieces","materialScore","evalMaterial","positionalScore","evalPosition","tacticScore","evalTactics","evalDoubleAttacks","evalCheckmate","attackedPieces","lvA","leastValuableAttacker","sorted","sort","a","b","secondBestAttack","Math","max","ownScore","reduce","sum","el","otherScore","evalPiecePositionalValue","findAttackers","value","pawnPositionalValue","rookPositionalValue","knightPositionalValue","bishopPositionalValue","queenPositionalValue","kingPositionalValue","pawn","posX","posY","abs","rook","knight","bishop","queen","king","left","right","yDir","xCoord","module","exports","toX","toY","from","notInCheck","checkMove","selected","dx","dy","checkPawnCaptures","oppColor","dX","dY","status","afterMove","findKing","colorToCheck","sameSide","returnResult","coord","step","checkObstruction","to","start","duped","target","checkCastle","checkPawnObstruction","castleQueenSideStatus","castleKingSideStatus","xStep","yStep","castleRook","checkEnPassant","rightSide","leftSide","captureEnPassant"],"mappings":"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","file":"1a024b4f88c4e96e0e3d.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1a024b4f88c4e96e0e3d\n **/","const BoardNode = require('./board_node.js');\nconst Ai = require('./ai.js');\n\nself.onmessage = function (e) {\n  let specMoves = e.data.data.specialMoves;\n  let testBoard = Ai.dupe(e.data.data.board.pieces);\n  let depth = e.data.data.depth;\n  let bestMove = BoardNode.findBestMove(testBoard,specMoves,depth);\n  let workerResult = 'Message received!';\n  let moveData = Object.assign({move: [], checkmate: false, enPassant: false, castle: false},bestMove);\n  postMessage(moveData);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/move_worker.js\n **/","const Ai = require('./ai.js');\n\nfunction findBestMove (board,specMoves,depth) {\n  let moves = parseMoveClusters(\n                findAllPieces(board,specMoves.currentSide)\n                .map(piece=> findAllLegalMovesByPiece(piece,board,specMoves))\n              );\n  if (moves.length === 0) return {checkmate: true, side: specMoves.currentSide};\n\n  let bestMove = null;\n  moves.forEach(move => {\n    let currentNode = new BoardNode(move,board,specMoves,depth);\n    if (currentNode.checkmate) {\n      return {move: currentNode.move, checkmate: true};\n    }\n    bestMove = bestMove ?\n      (currentNode.score > bestMove.score ?\n        currentNode : bestMove) : currentNode;\n  });\n  return {move: bestMove.move};\n}\n\nfunction findAllPieces (board,color) {\n  let returnPieces = [];\n  board.forEach((row,i)=>{\n    row.forEach((square,j)=>{\n      let testSquare = parseSquare(board,i,j);\n      if (testSquare.side === color) {\n        returnPieces.push(testSquare);\n      }\n    });\n  });\n  return returnPieces;\n}\n\nfunction findAllLegalMovesByPiece (piece, board, specMoves) {\n  let allSquares = [];\n  let allMoves;\n  for (let i=0;i<8;i++) {\n    for (let j=0;j<8;j++) {\n      allSquares.push([j,i]);\n    }\n  }\n  if (piece.type === 'r') {\n    allMoves = allSquares.filter(square=> {\n      return rookMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'n') {\n    allMoves = allSquares.filter(square=> {\n      return knightMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'b') {\n    allMoves = allSquares.filter(square=> {\n      return bishopMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'q') {\n    allMoves = allSquares.filter(square=> {\n      return queenMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'p') {\n    allMoves = allSquares.filter(square=> {\n      return pawnMoves(square[0], square[1], piece.pos, board);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n\n  if (piece.type === 'k') {\n    allMoves = allSquares.filter(square=> {\n      return kingMoves(piece.pos, square[0], square[1]);\n    }).filter(square=> {\n      return canMove(square[0], square[1], board, piece.pos,specMoves);\n    }).map(move => [piece.pos,move]);\n  }\n  return allMoves;\n}\n\nfunction parseMoveClusters (array) {\n  let result = [];\n  array.forEach(subArray => {\n    subArray.forEach(move => {\n      result.push(move);\n    });\n  });\n  return result;\n}\n\nfunction parseSquare (pieces, y, x) {\n  let pieceInfo = {\n    side: pieces[y][x][0][0],\n    type: pieces[y][x][0][2],\n    pos: [x,y],\n    defended: false\n  };\n  return pieceInfo;\n}\n\nconst PIECE_VALUES = {\n  'p': 100,\n  'r': 500,\n  'b': 300,\n  'n': 300,\n  'q': 900,\n  'k': 10000\n};\n\nclass BoardNode {\n  constructor(move,pieces,specialMoves,depth) {\n    this.move = move;\n    this.pieces = pieces;\n    this.specialMoves = specialMoves;\n    this.side = specialMoves.currentSide;\n    this.depth = depth;\n    this.checkmate = false;\n    this.score = this.evaluateMove();\n  }\n\n  evaluateMove () {\n    let newBoard = testMove(dupe(this.pieces),this.move[0],this.move[1]);\n    let ownPieces = findAllPieces(newBoard,this.side);\n    let otherPieces = findAllPieces(newBoard,this.side === 'w' ? 'b' : 'w');\n    let materialScore = this.evalMaterial(newBoard, ownPieces, otherPieces);\n    let positionalScore = this.evalPosition(newBoard, ownPieces);\n    let tacticScore = this.evalTactics(newBoard, ownPieces, otherPieces);\n    return materialScore + positionalScore + tacticScore;\n  }\n\n  evalTactics (ownPieces, otherPieces) {\n    let tacticScore = 0;\n    tacticScore += this.evalDoubleAttacks(this.pieces,otherPieces);\n    this.evalCheckmate();\n    return tacticScore;\n  }\n\n  evalCheckmate () {\n    let moves = parseMoveClusters(\n                  findAllPieces(this.pieces,this.side === 'w' ? 'b' : 'w')\n                  .map(piece=> findAllLegalMovesByPiece(piece,this.pieces,this.specialMoves))\n                );\n    if (moves.length === 0) {\n      this.checkmate = true;\n    }\n  }\n\n  evalDoubleAttacks(board,otherPieces) {\n    let attackedPieces = [];\n    otherPieces.forEach(piece => {\n      let lvA = this.leastValuableAttacker(board,piece);\n      if (lvA > 0) {\n        let defended = this.defended(board,piece);\n        let score = PIECE_VALUES[piece.type];\n          attackedPieces.push([score - lvA * defended]);\n      }\n    });\n    let sorted = attackedPieces.sort((a,b)=>b-a);\n    let secondBestAttack = sorted[1] || 0;\n    return Math.max(secondBestAttack,0);\n  }\n\n  evalMaterial (board, ownPieces, otherPieces) {\n    let ownScore =  ownPieces\n                    .map(piece => PIECE_VALUES[piece.type])\n                    .reduce((sum,el) => sum + el);\n\n    let otherScore = otherPieces\n                      .map(piece => PIECE_VALUES[piece.type])\n                      .reduce((sum,el) => sum + el);\n\n    return ownScore - otherScore;\n  }\n\n  evalPosition (board, ownPieces) {\n    let ownScore = ownPieces\n                    .map(piece=> this.evalPiecePositionalValue(piece,board))\n                    .reduce((sum,el) => sum + el);\n    return ownScore;\n  }\n\n  defended (board, piece) {\n    //Can use the findAttacker method but with own side to check for defended status\n    let defended = findAttackers(piece.pos, board, piece.side, true)[0];\n    if (defended) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n\n  leastValuableAttacker (board, piece) {\n    let lvA = findAttackers (piece.pos, board, piece.side === 'w' ? 'b' : 'w', false);\n    if (lvA[0] && lvA[0][0]) {\n      return PIECE_VALUES[lvA[0][1]];\n    } else {\n      return 0;\n    }\n  }\n\n  evalPiecePositionalValue (piece,board) {\n    let value = 0;\n    switch (piece.type) {\n      case 'p':\n        value = this.pawnPositionalValue(piece,board);\n        break;\n      case 'r':\n        value = this.rookPositionalValue(piece,board);\n        break;\n      case 'n':\n        value = this.knightPositionalValue(piece,board);\n        break;\n      case 'b':\n        value = this.bishopPositionalValue(piece,board);\n        break;\n      case 'q':\n        value = this.queenPositionalValue(piece,board);\n        break;\n      case 'k':\n        value = this.kingPositionalValue(piece,board);\n        break;\n      default:\n\n    }\n    return value;\n  }\n\n  pawnPositionalValue (pawn,board) {\n    let posX = pawn.pos[0],\n      posY = pawn.pos[1],\n      value = 0;\n\n    value += (\n      30 * (0.25 / (Math.abs(3.5 - posY) * (Math.abs(3.5 - posX))))\n    );\n    let lvA = this.leastValuableAttacker (board, pawn);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[pawn.type] - lvA * (this.defended(board,pawn)),0);\n    }\n\n    return value;\n  }\n\n  rookPositionalValue (rook,board) {\n    let moves = findAllLegalMovesByPiece (rook,board,this.specialMoves);\n    let value = 0;\n\n    let lvA = this.leastValuableAttacker (board, rook);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[rook.type] - lvA * (this.defended(board,rook)),0);\n    }\n    return moves.length * 5 + value;\n  }\n\n  knightPositionalValue (knight,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (knight,board,this.specialMoves);\n    moves.forEach(move => {\n      value += (\n        12 * (0.25 / Math.abs(3.5 - move[1][1]) * (Math.abs(3.5 - move[1][0])))\n      );\n    });\n    let lvA = this.leastValuableAttacker (board, knight);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[knight.type] - lvA * (this.defended(board,knight)),0);\n    }\n    if (this.defended(board,knight)) {\n      value += 25;\n    }\n    return value;\n  }\n\n  bishopPositionalValue (bishop,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (bishop,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, bishop);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[bishop.type] - lvA * (this.defended(board,bishop)),0);\n    }\n    if (this.defended(board,bishop)) {\n      value += 25;\n    }\n    return moves.length * 8 + value;\n  }\n\n  queenPositionalValue (queen,board) {\n    let value = 0;\n    let moves = findAllLegalMovesByPiece (queen,board,this.specialMoves);\n    let lvA = this.leastValuableAttacker (board, queen);\n    if (lvA > 0) {\n      value -= Math.max(PIECE_VALUES[queen.type] - lvA * (this.defended(board,queen)),0);\n    }\n\n    return moves.length * 2 + value;\n  }\n\n  kingPositionalValue (king,board) {\n    let posX = king.pos[0],\n      posY = king.pos[1],\n      value = 0,\n      left = posX === 0 ? null : (posX - 1),\n      right = posX === 7 ? null : (posX + 1),\n      yDir = king.side === 'w' ?\n      (posY === 0 ? null : (posY - 1)) : (posY === 7 ? null : (posY + 1));\n    [left, posX, right].filter(el=>el).forEach(xCoord => {\n      let testSquare = board[yDir][xCoord][0];\n      if (testSquare[0] === king.side) {\n        if (testSquare[2] === 'p') {\n          value += 30;\n        } else {\n          value += 20;\n        }\n      }\n    });\n    if ((king.pos[0] === 6) || (king.pos[0] === 2)) {\n      value += 100;\n    }\n    return value;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/board_node.js\n **/","module.exports = {\n  specialMoves: {},\n\n  canMove(toX, toY, pieces, from,specMoves) {\n    specialMoves = specMoves;\n    // if (from[0] === 4 && from[1] === 0 && toX === 5 && toY === 1) debugger\n    if (notInCheck(toX, toY, from, pieces)) {\n      if (checkMove(toX, toY, pieces, from)) return true;\n    }\n    return false;\n  },\n\n  bishopMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1);\n  },\n\n  rookMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  queenMoves (selected, toX, toY) {\n    let [x, y] = selected;\n    let dx = toX - x;\n    let dy = toY - y;\n    return (Math.abs(dx) / Math.abs(dy) === 1) ||\n    (dx === 0 && dy !== 0|| dy === 0 && dx !== 0);\n  },\n\n  knightMoves (selected,toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n           (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  },\n\n  kingMoves (selected, toX, toY) {\n    const [x, y] = selected;\n    const dx = toX - x;\n    const dy = toY - y;\n    return (Math.abs(dx) <= 1 && Math.abs(dy) <= 1) &&\n           (Math.abs(dx) + Math.abs(dy) > 0);\n  },\n\n  checkPawnCaptures (toX, toY, pawn, pieces) {\n    const [x, y] = pawn;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const dX = toX - x;\n    const dY = toY - y;\n    const enPassant = specialMoves[color].enPassant;\n    if (color === 'w' && dY > 0 || color === 'b' && dY< 0) {\n      return false;\n    } else if (Math.abs(dX) === 1 && Math.abs(dY) === 1 &&\n      pieces[toY][toX][0][0] !== color &&\n      pieces[toY][toX][0][0] !== 'n') {\n        return true;\n      } else if (enPassant.status) {\n        if (pawn[0] === enPassant.pos[0] && pawn[1] === enPassant.pos[1] &&\n          toX === x + enPassant.pos[2] && Math.abs(dY) === 1) {\n            return true;\n        }\n      }\n    return false;\n  },\n\n  notInCheck (toX, toY, from, pieces) {\n    let color = pieces[from[1]][from[0]][0][0];\n    let testBoard = dupe(pieces);\n    let afterMove = testMove(testBoard, from, [toX, toY]);\n    let king = findKing(afterMove,color); //[y,x];\n    if (findAttackers(king,afterMove,color==='w'?'b':'w',false).length > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  findAttackers (piece, board, colorToCheck, sameSide) {\n    if (!piece) return false;\n    let yDir = colorToCheck === 'w' ? piece[1] + 1 : piece[1] - 1;\n    let left = piece[0] - 1;\n    let right = piece[0] + 1;\n    let returnResult = [];\n    //test for pawns\n    if (left >= 0 && left <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][left][0] === `${colorToCheck}-p`) {\n      returnResult.push([true,'p']);\n    } else if (right >= 0 && right <= 7 && yDir >= 0 && yDir <= 7 &&\n      board[yDir][right][0] === `${colorToCheck}-p`) {\n      returnResult.push([true, 'p']);\n    }\n    //test for knights\n    [[1,2],[1,-2],[-1,2],[-1,-2],[2,1],[2,-1],[-2,1],[-2,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <=7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-n`) {\n          returnResult.push([true, 'n']);\n        }\n      }\n    });\n    //test for bishops/queens\n    [[1,1],[1,-1],[-1,1],[-1,-1]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-b` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'b']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n    //test for rooks/queens\n    [[0,1],[0,-1],[-1,0],[1,0]].forEach(step => {\n      let x = piece[0] + step[0],\n        y = piece[1] + step[1];\n      while (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-r` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true, 'r']);\n        } else if (board[y][x][0] === `${colorToCheck}-q` &&\n          checkObstruction(x,y,piece,board,sameSide)) {\n          returnResult.push([true,'q']);\n        }\n        x += step[0];\n        y += step[1];\n      }\n    });\n\n    //test for king\n    [[0,1],[0,-1],[-1,0],[1,0],[1,1],[1,-1],[-1,1],[-1,-1]].forEach(coord => {\n      let x = piece[0] + coord[0];\n      let y = piece[1] + coord[1];\n      if (x >= 0 && x <= 7 && y >= 0 && y <= 7) {\n        if (board[y][x][0] === `${colorToCheck}-k`) {\n          returnResult.push([true, 'k']);\n        }\n      }\n    });\n    return returnResult;\n  },\n\n  testMove (testBoard, from, to) {\n    let selected = from;\n    let start = testBoard[selected[1]][selected[0]][0];\n    let color = start[0];\n    if (testBoard[to[1]][to[0]][0][0] !== color) {\n      testBoard[to[1]][to[0]][0] = start;\n      testBoard[selected[1]][selected[0]][0] = 'n-l';\n    }\n    return testBoard;\n  },\n\n  dupe (array) {\n    const duped = [[],[],[],[],[],[],[],[]];\n    for (let i=0;i<array.length;i++) {\n      for (let j=0;j<array[i].length;j++) {\n        let piece = `${array[i][j][0][0]}-${array[i][j][0][2]}`;\n        duped[i].push([piece]);\n      }\n    }\n    return duped;\n  },\n\n  findKing (pieces,color) {\n    const target = `${color}-k`;\n    for (let i=0; i<=7;i++) {\n      for (let j=0; j<=7;j++) {\n        if (pieces[i][j][0] === target) {\n          return [j, i];\n        }\n      }\n    }\n  },\n\n  checkMove (toX, toY, pieces, from) {\n    let pos = from;\n    let piece = pieces[pos[1]][pos[0]][0];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (piece[2] === 'n') {\n      if (pieces[toY][toX][0][0] !== color) {\n        return knightMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'b') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return bishopMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'r') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return rookMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'q') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        return queenMoves(pos,toX, toY);\n      }\n    } else if (piece[2] === 'k') {\n      if (checkObstruction(toX, toY, pos, pieces)) {\n        if (checkCastle(pos, toX, toY, pieces)) {\n          return true;\n        } else {\n          return kingMoves(pos,toX, toY);\n        }\n      }\n    } else if (piece[2] === 'p') {\n      if (checkPawnCaptures(toX, toY, pos, pieces)) {\n        return true;\n      } else if (checkPawnObstruction(toX, toY, pieces)) {\n        return pawnMoves(toX, toY, pos, pieces);\n      }\n    }\n  },\n\n  checkPawnObstruction (toX, toY, pieces) {\n    if (pieces[toY][toX][0][0] !== 'n') {\n      return false;\n    }\n    return true;\n  },\n\n  checkCastle (pos, toX, toY, pieces) {\n    let king = [pos[1],pos[0]];\n    let color = pieces[pos[1]][pos[0]][0][0];\n    if (toX === 2 && toY === pos[1] && checkObstruction(toX - 1, toY, pos, pieces) &&\n        notInCheck(toX + 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleQueenSideStatus;\n    } else if (toX === 6 && toY === pos[1] && checkObstruction(toX, toY, pos, pieces) &&\n        notInCheck(toX - 1, toY, pos, pieces) &&\n        findAttackers(king, pieces, color === 'w' ? 'b' : 'w',false).length === 0) {\n      return specialMoves[color].castleKingSideStatus;\n    }\n  },\n\n  checkObstruction (toX, toY, from, pieces, sameSide = false) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dX = toX - x;\n    const dY = toY - y;\n    const xStep = dX / Math.abs(dX) || 0;\n    const yStep = dY / Math.abs(dY) || 0;\n    if (dX === 0 && dY !== 0) {\n      for (let i = 1; i <= Math.abs(dY);i++) {\n        if (pieces[y+(yStep*i)][x][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x][0][0] !== 'n' && i < Math.abs(dY))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (dY === 0  && dX !== 0) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n      return true;\n    } else if (Math.abs(dX) / Math.abs(dY) === 1) {\n      for (let i = 1; i <= Math.abs(dX);i++) {\n        if (pieces[y+(yStep*i)][x+(xStep*i)][0][0] === color && !sameSide ||\n          (pieces[y+(yStep*i)][x+(xStep*i)][0][0] !== 'n' && i < Math.abs(dX))) {\n          return false;\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  castleRook (toX, toY, pieces) {\n    let start = toX > 4 ? [7, toY] : [0, toY];\n    let piece = pieces[start[1]][start[0]][0];\n    pieces[toY][toX][0] = piece;\n    pieces[start[1]][start[0]][0] = 'n-l';\n  },\n\n  checkEnPassant (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const oppColor = color === 'w' ? 'b' : 'w';\n    const rightSide = toX < 7 ? pieces[toY][toX + 1][0] : ['n-l'];\n    const leftSide = toX > 0 ? pieces[toY][toX - 1][0] : ['n-l'];\n    specialMoves[oppColor].enPassant = {status: false, pos: []};\n    if (leftSide[2] === 'p' && leftSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX - 1, toY, 1]};\n    } else if (rightSide[2] === 'p' && rightSide[0] === oppColor) {\n      specialMoves[oppColor].enPassant = {status: true, pos: [toX + 1, toY, -1]};\n    }\n  },\n\n  captureEnPassant (x, y, pieces) {\n    pieces[y][x][0] = 'n-l';\n  },\n\n  pawnMoves (toX, toY, from, pieces) {\n    const [x, y] = from;\n    const color = pieces[y][x][0][0];\n    const dx = color === 'w' ? toX - x : x - toX;\n    const dy = color === 'w' ? toY - y : y - toY;\n    return (\n      (dx === 0 && dy === -1) ||\n      (y === 6 && dy === -2 && dx === 0 && pieces[5][x][0][0] === 'n') ||\n      (y === 1 && dy === -2 && dx === 0 && pieces[2][x][0][0] === 'n') ||\n      checkPawnCaptures(toX, toY, from, pieces)\n    );\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./logic/ai.js\n **/"],"sourceRoot":""}